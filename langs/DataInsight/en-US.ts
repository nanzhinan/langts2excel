const en_US = {
  /** dis-A */
  account: 'Account',
  add_data_source: 'Add new data source',
  add_group_first: 'Please add a group from the dataset page first.',
  add_organization: 'Add organization',
  add_source_first: 'Please add a source from the data sources page first.',
  add_task: 'Add task',
  add_tasks_desc: 'To add or select a dataset from the left panel.',
  add_udaf_function: 'Add UDAF',
  add_udf_function: 'Add UDF',
  add_user_dis: 'Add user',
  add_new_task: 'Add new task',
  add_child_group: 'Add child group',
  another_name: 'Alias',
  assign_task: 'Task status',
  add_dataset: 'Add new dataset',
  about: 'About',
  access: 'Access',
  auth_database: 'Auth. database',
  add_job: 'Add job',
  add_task_limit_desc: 'You can only create ten tasks at most.',
  all_setting_will_be_changed: 'All settings which related to this dataset will be changed.',
  application_list: 'Application list',
  application_name: 'Application name',
  as_least_one_app: 'At least one application is required.',
  aggregate: 'Aggregate',
  alter_columns: 'Alter columns',
  add_columns: 'Add columns',
  and: 'AND',
  /** dis-B */
  basic: 'Basic information',
  basic_only: 'Basic',
  basicPassword: 'Basic password',
  basicUser: 'Basic username',
  business_intelligence: 'Business intelligence',
  boundary_integer_tips: 'The start value of the incrementing column. If left blank, the system will automatically take the maximum value of the column as the start value.',
  blank_table: 'Blank table',
  boundary_time_tips: 'The start time of the incrementing column. If left blank, the system will automatically take the lastest time of the column as the start time.',
  bigDataStorage: 'Big Data Storage',
  batch: 'Batch',
  batch_selection_cannot_edit_dataset: 'Datasets cannot be edited in bulk selection mode.',
  /** dis-C */
  charset: 'Charset',
  create_group_limit: 'Group can only be created to the third layer.',
  cdc: 'CDC',
  // click_add: 'Click "+" above to add {name}.',
  click_add: 'Click the "+" button to add {name}.',
  click_add_select_dataset: 'To add or select a dataset from the left panel to preview.',
  click_select_data_source: 'Select data from the left panel to preview.',
  click_add_group: 'Click "+" above to add a group first.',
  click_join_org: 'Click the "+" button to add the user to organizations.',
  click_select_function: 'Select a function from the left panel.',
  configuration_management: 'Configuration management',
  collection: 'Collection',
  completion_time: 'Completion time',
  create_new_dataset: 'Create new dataset',
  create_revision: 'create_revision',
  custom_schema: 'Custom schema',
  custom_schema_max_length: 'Must be no more than 63 characters.',
  custom_schema_col_name: 'Column name',
  custom_schema_data_type: 'Data type',
  column: 'Column',
  columns: 'Columns',
  column_sort: 'Sort column',
  column_set: 'Column settings',
  column_name: 'Column name',
  columns_list: 'Column list',
  change: 'Change',
  change_password: 'Change password',
  physical_table: 'Physical table',
  physical_table_tooltips: 'Used to store the data extracted from the data source, the query SQL can be customized.',
  cron_expression: 'Cron expression',
  cron_expression_custom: 'Custom cron expression',
  cron_expression_example: 'Cron expression example',
  cron_expression_desc: 'The cron expression consists of five fields, each field can have the following values.',
  custom: 'Custom',
  completed: 'Completed',
  click_edit_to_modify: 'Click edit to modify this value.',
  custom_partition: 'Custom partition',
  copy_new_dataset: 'Create a copy',
  // column_name_repeat: 'Column name {val} was repeated',
  column_name_repeat: 'Duplicate column names are not allowed.',
  column_setting_name_repeat: 'Duplicate column settings are not allowed.',
  column_name_not_same: 'Column names are not allowed.',
  index_name_repeat: 'Duplicate index names are not allowed.',
  compare_s_t_and_e_t_error: 'The end time cannot be earlier than the start time',
  confirm: 'Confirm',
  click_lock_make_change: 'Click the lock to make changes.',
  click_lock_save_change: 'Click the lock to save changes.',
  copy_to_clipboard: 'Copied to clipboard.',
  create_new: 'Create new',
  combine: 'Combine',
  confirm_switch_to_graphic_flow_mode: 'Confirm switch to graphic flow mode',
  confirm_switch_to_sql_mode: 'Confirm switch to SQL mode',
  custom_table: 'Custom table',
  custom_table_tooltips: 'Used to store the data written through Data Filling function or INSERT statement, the schema of dataset can be customized. It can also store the data extracted from the data source.',
  column_data_type_error: 'The following cell values do not match the data type of column: {val}',
  cell_data_type_error: 'The cell values do not match the data type of column.',
  current_version: 'Current version',
  /** dis-D */
  database_name: 'Database name',
  database_dis: 'database',
  database_tips: 'Corresponding to the database name of data repository.',
  dataset: 'Dataset',
  datasets: 'Datasets',
  dataset_alias: 'Dataset alias',
  dataset_lower: 'dataset',
  dataset_preview: 'Dataset preview',
  data_detect: 'Data detect',
  data_insight_sign_out: 'Sign out',
  data_integration: 'Data integration',
  data_preview: 'Data preview',
  dataset_column: 'Dataset column',
  dataset_fail_tooltip: 'This dataset was fail to complete, please try again.',
  dataset_group: 'Group',
  dataset_list: 'Dataset list',
  dataset_name: 'Dataset name',
  dataset_running_tooltip: 'This dataset is being created, please wait. {val1}You will receive notification after the job has completed.',
  data_sets: 'Datasets',
  data_source_alias: 'Data source alias',
  data_source_disconnected: 'Unable to connect to data source.',
  data_source_name: 'Data source name',
  data_source_lower: 'data source',
  data_source_config: 'Configure data source',
  data_source_type: 'Data source type',
  data_sources: 'Data sources',
  data_sources_list: 'Data source list',
  data_sources_overview: 'Data Sources Overview',
  date_type: 'Data type',
  date_time: 'Datetime',
  data_virtualization: 'Data Integration Service (DIS)',
  day_of_week: 'Day of week',
  disconnected: 'The data source is disconnected.',
  dis_select: '- Select -',
  dis_input: '- Input -',
  dis_sure_to_save_dataset: 'The dataset will be recreated with the new settings, and the data will be cleared. Are you sure you want to save this change?',
  dis_minute_desc: '* (0 - 59)',
  dis_hour_desc: '* (0 - 23)',
  dis_day_of_month_desc: '* (1 - 31)',
  dis_month_desc: '* (Jan - Dec)',
  dis_day_of_week_desc: '* (Mon - Sun)',
  day_of_month: 'Day of month',
  destination: 'Destination',
  dis_action_success: '{action} successfully!',
  dis_advanced_setting: 'Advanced Setting',
  dis_creating: 'Creating...',
  dis_enable: 'Enable',
  dis_dataset_name: 'Dataset name',
  dis_dataset_name_regexp: 'Only a-z, A-Z, 0-9 and _ allowed.',
  dis_data_source_name_regexp: 'Only a-z, A-Z, 0-9 and _ allowed.',
  dis_disable: 'Disabled',
  dis_function: 'function',
  dis_required: 'Required',
  dis_host: 'Host',
  dis_port: 'Port',
  dis_user_name: 'Username (Email)',
  disable_job: 'Disable job',
  dis_not_dataset_text_regexp: 'Cannot contain reserved words "dataset" or "datasets", neither uppercase or lowercase.',
  dis_first_byte_not_num_underline_regexp: 'Must not start with numeral or "_".',
  dis_group_name: 'Group name',
  data_source_btn: 'Data source',
  dis_header: 'Set the first row as header',
  dis_header_label: 'Header',
  dis_sep: 'Separator',
  dis_quote: 'Quote',
  dis_loading: 'Loading...',
  dis_row: 'Rows',
  dis_user: 'Username',
  dis_start_time: 'Start time',
  dis_end_time: 'End time',
  dis_minutes: 'minute(s)',
  dis_hours: 'hour(s)',
  dis_days: 'day(s)',
  dis_version: 'Version',
  dis_task_cron_example_every_minute: 'Every minute.',
  dis_task_cron_example_every_hour: '5 minutes past the hour.',
  dis_task_cron_example_every_day: '10:15 AM every day.',
  dis_task_cron_example_only_monday: 'At 14:00 PM, only on Monday.',
  dis_task_cron_example_every_Nov: 'Every November 11th at 11:11 AM.',
  dis_every_times: 'Every {frequency} {interval}',
  dis_data: 'Data',
  dis_select_all: 'Select all',
  dis_enabled: 'Enabled',
  dis_examples: 'Examples',
  dis_info: 'Info',
  dis_json: 'Invalid JSON string.',
  dis_number: 'Number',
  dis_date_time: 'Date time',
  dis_url: 'URL',
  dis_method: 'Method',
  dis_minute: 'Minute',
  dis_hour: 'Hour',
  dis_month: 'Month',
  dis_header_desc: 'Sets the first row in the CSV file as the field name.',
  dis_service_name: 'Service name',
  dis_quote_desc: 'Sets a single character used for escaping quoted values where the separator can be part of the value.',
  dis_search_root_group: 'Group name (only in the root directory)',
  datasets_destination: 'Save destination',
  dis_time_period: 'Time interval',
  dis_cron_expression_desc: 'The cron expression consists of five fields, each field can have the following values.',
  dataset_create_success: 'Dataset created successfully',
  dataset_create_fail: 'Dataset created {value}',
  dataset_create_processing: 'Dataset creating',
  dataset_edit_success: 'Dataset edited successfully',
  dataset_edit_fail: 'Dataset edited {value}',
  dataset_edit_processing: 'Dataset editing',
  dataset_create_success_msg: `Dataset "{value}" has created successfully.`,
  dataset_create_fail_msg: `Dataset "{value}" has failed to create.`,
  dataset_create_processing_msg: `Dataset "{value}" is being created.`,
  dataset_edit_success_msg: `Dataset "{value}" has edited successfully.`,
  dataset_edit_fail_msg: `Dataset "{value}" has failed to edit.`,
  dataset_edit_processing_msg: `Dataset "{value}" is being edited.`,
  dataset_insert_success: 'Inserted successfully',
  dataset_insert_fail: 'Inserted {value}',
  dataset_insert_processing: 'Inserting',
  dataset_insert_success_msg: `Dataset "{value}" has inserted successfully.`,
  dataset_insert_fail_msg: `Dataset "{value}" has failed to insert.`,
  dataset_insert_processing_msg: `Dataset "{value}" is being inserted.`,
  dataset_insert_tips: 'This data is being inserted, please wait. You will receive notification after the insert has completed.',
  dis_on: 'On',
  dis_off: 'Off',
  dis_on_or_off: 'On/Off',
  dashboard: 'Dashboard',
  drop_file_to_upload: 'Drop your file here, or {value} to upload.',
  drop_file_here: 'Drop your file here',
  dis_upload_file: 'Upload file',
  dis_failed: 'failed',
  dis_length_error: 'Only positive integer',
  dis_blank_table_length_required: 'Length is required when the data type is DECIMAL.',
  dis_column_name_rules: 'Column name must be [a-zA-Z0-9_] and cannot start with a number or "_".',
  dis_at_least_one_column: 'At least one custom schema or custom partition is required.',
  dis_dataset_name_rule: 'Only [a-zA-Z0-9_] allowed and cannot start with a number or "_".',
  datasource_access: 'Data sources access',
  dataset_access: 'Datasets access',
  datasource_name: 'Data source name',
  dis_source_id: 'Source ID',
  dis_dataset_id: 'Dataset ID',
  dis_source_name: 'Source name',
  dis_created_by: 'Created by',
  dis_created_at: 'Created at',
  dis_updated_by: 'Updated by',
  dis_updated_at: 'Updated at',
  dis_none: 'None',
  dis_apply: 'Apply',
  dis_clear_all: 'Clear all',
  dis_time_filter: 'Time filter',
  dis_time_range: 'Time range',
  dis_last_seven_days: 'Last 7 days',
  dis_from_to: 'From-to',
  detail: 'Details',
  dis_start_date: 'Start date',
  dis_end_date: 'End date',
  dis_primary_key: 'Primary key',
  dis_incremental_update_tips: 'You need to configure incremental update setting before you add an incremental update task.',
  default_database: 'Default database',
  default_database_tips: 'The database name to read data from. Leave this field empty, if it is the same as Auth. database.',
  dis_type: 'Type',
  dis_inferSchema: 'Infer schema',
  dis_inferSchema_desc: 'Infers the input schema automatically from data.',
  dis_application: 'Application',
  dis_close: 'Close',
  development_mode: 'Development mode',
  data_assets: 'Data assets',
  double_click_or_drag_tips: 'Double click to add {name} into SQL for something. Or drag {name} into SQL for something.',
  drag_tips_only: 'Drag {name} into SQL for something.',
  dis_group_list: 'Group list',
  document_api: 'API document',
  data_development: 'Data development',
  drag_node_to_create: 'Please drag nodes from left side to create the flow.',
  duplicate: 'Duplicate',
  dis_excludeAttribute: 'Exclude attribute',
  dis_excludeAttribute_tips: 'Whether you want to exclude attributes in elements or not.',
  download_template_to_learn: 'Download the {template} to help you fill data.',
  data_input: 'Data filling',
  delete_all_resources_of_group: 'Please delete all resources in the group first.',
  /** dis-E */
  edit_name: 'Edit "{name}"',
  edit_job: 'Edit job',
  edit_data_source: 'Edit data source',
  edit_dataset: 'Edit dataset',
  edit_task: 'Edit task',
  edit_udf_function: 'Edit UDF',
  edit_udaf_function: 'Edit UDAF',
  email: 'E-mail',
  end_by: 'End by',
  execution_frequency: 'Execution frequency',
  execution_once: 'Execute only once',
  everyday: 'Execute once a day',
  every: 'Every',
  extension_functions: 'Extension functions',
  excution_time: 'Execution time',
  enable_job: 'Enable job',
  epoch: 'Epoch',
  extension_service: 'External services',
  extension_function_access: 'Extension functions access',
  encoding: 'Encoding',
  error_msg: 'Error message:',
  end_time_setting: 'End time setting',
  e_t_need_later_then_s_t_error: 'The end time must be later than the start time',
  execute: 'Execute',
  exit_development_mode: 'Exit development mode',
  excel_insert_col_before: 'Insert a new column before',
  excel_insert_col_after: 'Insert a new column after',
  excel_insert_row_before: 'Insert a new row before',
  excel_insert_row_after: 'Insert a new row after',
  excel_insert_rows_before: 'Insert new rows before',
  excel_insert_rows_after: 'Insert new rows after',
  excel_insert_rows_end: 'Insert a new row',
  excel_insert_more_rows_end: 'Insert new rows',
  excel_delete_selected_cols: 'Delete selected columns',
  excel_rename_column: 'Rename this column',
  excel_order_ascending: 'Order ascending',
  excel_order_descending: 'Order descending',
  excel_delete_selected_rows: 'Delete selected rows',
  excel_copy: 'Copy',
  excel_paste: 'Paste',
  excel_save_as: 'Save as',
  /** dis-F */
  fail: 'Failed',
  full_update: 'Full update',
  function_alias: 'Function alias',
  function_dis: 'Function',
  function_lower: 'function',
  functions: 'Functions',
  functions_list: 'Function list',
  function_name: 'Function name',
  file_upload_row_limit: 'File format accepted: {type}. Maximum number of upload file records: {size}.',
  file_upload_format: 'File format accepted: {type}. Maximum upload file size: {size}.',
  file_upload_fail: 'The file could not be uploaded. Please try again.',
  file_uploading: 'Please wait until the file has finished uploading.',
  file_upload_success: 'Your file has been successfully uploaded.',
  failure_notification: 'Failure notification',
  fail_upload_fail_check_format: 'Cannot upload file, please check the file format is {type} and try again.',
  fail_upload_fail_check_row_limit: 'Cannot upload file. Number of file records should be no more than 10000.',
  fail_upload_fail_check_size: 'Cannot upload file. File size should be no more than 100 MB.',
  fail_upload_fail_content: 'The uploaded file is invalid. Please check the file format and content and try again.',
  fail_upload_fail_check_length: 'Only one file is allowed to be uploaded.',
  failure_notification_error: 'Failed to get notification group. Please set the correct NOTIFICATION_URL parameter value, and the user needs to have permission to use the WISE-IoTSuite/Notification.',
  failure_notification_no_exist: 'The notification group no longer exists. Please select another notification group.',
  failure_notification_no_permission: 'Failed to get notification group. Please set the correct NOTIFICATION_URL parameter value, and the user needs to have permission to use the WISE-IoTSuite/Notification.',
  failure_notification_not_found: 'Notification group not found. At least one notification group must be created in WISE-IoTSuite/Notification.',
  full_access: 'Full access',
  finish: 'Finished',
  function_name_or_alias: 'Function name or alias',
  filter_row: 'Filter rows',
  filter: 'Filter',
  filter_setting: 'Filter setting',
  /** dis-G */
  general: 'General',
  group_repeat: 'A group with the same name already exists in the specified group.',
  graphic_flow: 'Graphic flow',
  group_by: 'Group by',
  /** dis-H */
  host_role: 'The format of this field is "{tag1}host{tag2}:{tag1}port{tag2}". If there are multiple "{tag1}host{tag2}:{tag1}port{tag2}", please separate with a comma (,).',
  home_lower: 'home',
  /** dis-I */
  import: 'Import',
  import_data: 'Import data',
  information: 'Information',
  instanceName: 'Instance name',
  immediate_update: 'Immediate update',
  item: 'Items',
  input_regexp_1: 'Only [a-zA-Z0-9.-] allowed.',
  input_regexp_2: '. and - should not be at the beginning or at the end.',
  input_regexp_3: 'Only numbers are allowed.',
  input_regexp_4: 'Only [0-9a-f-] allowed.',
  input_regexp_5: 'Only [a-zA-Z0-9:-.,] allowed.',
  input_regexp_6: 'Only [a-z0-9.-] allowed.',
  input_regexp_7: 'Only [a-zA-Z0-9._-] and space allowed.',
  input_regexp_8: 'Only [a-zA-Z0-9._-] allowed.',
  input_regexp_9: 'Space is not allowed.',
  input_regexp_10: 'Only [a-zA-Z0-9_-.+] allowed.',
  input_regexp_11: 'Only [a-zA-Z0-9_-./@:] allowed.',
  input_regexp_12: 'This name is a reserved name, please use a different name.',
  input_regexp_13: 'Invalid plan name, please use a different name.',
  input_regexp_14: 'Only [a-zA-Z0-9.-] and [a-z] should be at the beginning.',
  input_regexp_15: 'Only [0-9.] and . should not be at the beginning or at the end.',
  input_regexp_16: 'Only [a-z0-9_-.] allowed.',
  input_regexp_17: 'Only positive integer and -1 are allowed.',
  input_regexp_18: 'Only positive number and -1 are allowed.',
  input_regexp_19: 'Spaces are not allowed at the beginning or end.',
  input_regexp_20: 'Only [a-zA-Z0-9_] allowed and cannot start with a number.',
  input_regexp_21: 'This field must be positive integer and between {min} and {max}.',
  input_regexp_22: 'Must be no more than {length} characters.',
  input_regexp_23: 'Incorrect format.',
  input_regexp_24: 'Only [a-z0-9_] allowed and cannot start with a number.',
  input_regexp_25: 'Only [a-zA-Z0-9] allowed.',
  input_regexp_26: 'Only [a-zA-Z0-9_] allowed.',
  input_regexp_27: 'This field must be integer and between {min} and {max}.',
  input_regexp_28: 'Only [a-z0-9_] allowed and start with a lower case letter.',
  input_regexp_int: 'This field must be integer.',
  input_regexp_int_min: 'This field must be integer and minimum value is {min}.',
  input_regexp_decimal: 'Both numbers must be positive integers between 0 and 38, and the first number must be greater than or equal to the second number.',
  input_regexp_no_comma: '"," is not allowed in this field.',
  input_regexp_no_double_quotes: 'The column name cannot contain double quotes.',
  input_regexp_min_count: 'The minimum value is {minCount}.',
  input: 'Input',
  input_insert_row_counts: 'Please input the row counts.',
  insert_row_count_s: 'Row counts',
  insert_row_success: 'Inserted successfully!',
  /** dis-J */
  job_management: 'Job management',
  job_id: 'Job ID',
  job_name: 'Job name',
  job_mgmt_lowercase: 'job management',
  jump_to_job_mgmt: 'Go to {name} to create task.',
  jobs: 'Jobs',
  jobs_lower: 'job',
  jump_to_application_mgmt: 'Go to {name} to create application.',
  joint_data: 'Joint data',
  /** dis-L */
  lease: 'lease',
  less: 'less',
  last_execution_time: 'Last execution time',
  last_completion_time: 'Last completion time',
  last_version: 'Last version',
  /** dis-M */
  marks_title: '“{val}”',
  mark_all_as_read: 'Mark all as read',
  mark_as_read: 'Mark as read',
  measurement: 'Measurement',
  message: 'Message',
  move_dataset_to_new_group: 'Select a group from below list.',
  move_to: 'Move to...',
  move_to_short: 'Move to',
  move_to_root: 'Move to the root directory',
  move: 'Move',
  manage_application: 'Manage application',
  manage_applications: 'Manage applications',
  manage_applicaiton_config: 'Configure your application for your datasets.',
  more: 'More',
  more_detail: 'More details',
  mine_datasets: 'My datasets',
  /** dis-N */
  no_application: 'No application, yet.',
  next_execution: 'Next execution',
  no_data_yet: 'No data, yet.',
  no_dataset: 'No dataset selected.',
  no_dataset_preparing: 'No dataset in progress',
  no_data_selected: 'No data selected.',
  no_data_source_selected: 'No data source selected.',
  no_function_selected: 'No function selected.',
  no_job_selected: 'No job selected.',
  no_data_group: 'No group, yet.',
  no_data_sources: 'No data source, yet.',
  no_folder: 'No folder, yet.',
  no_join_org: 'No organizations, yet.',
  no_user: 'No users have been added to the organization.',
  no_group_to_select: 'There is no group to select.',
  no_dataset_to_select: 'There is no dataset to select.',
  no_source_to_select: 'There is no data source to select.',
  no_status: 'No status',
  no_end_time: 'No end time',
  no_permission: 'License validation failed',
  no_permission_page: 'You can go back to {home} and try again. If this happens again, please contact us.',
  no_task: 'No task, yet.',
  no_task_update_strategy: 'No task, yet.',
  notification_alarm: 'Notification',
  noSQL: 'NoSQL database',
  no_group: 'No group selected.',
  number_of_entries: 'Number of entries',
  num_item: '{num} item(s)',
  num_item_selected: '{num} item(s) selected:',
  num_min_max: '',
  num_organization: '{num} organization(s)',
  num_users: '{num} user(s)',
  num_teams: '{num} team(s)',
  num_roles: '{num} role(s)',
  num_datasets: '{num} dataset(s)',
  not_selected_no_need_fill_in: 'Not selected, no need to fill in.',
  notification_group: 'Notification group',
  no_matching_column: 'No column in the dataset matching this parameter type.',
  'No.': 'No.',
  no_extension_function: 'There is no extension function to select.',
  new_dataset: 'New dataset',
  no_node: 'No nodes, yet.',
  no_columns: 'No columns, yet.',
  no_columns_add_new: 'Click the " {btn} " button to add columns!',
  no_columns_drag_new: 'Please drag columns to here.',
  no_rules: 'No rules, yet.',
  no_rules_add_new: 'Click the " {btn} " button to add rules!',
  /** dis-O */
  oauthToken: 'OAuth token',
  organization_dis: 'Organization',
  organization_dis_lower: 'organization',
  organizations_dis: 'Organizations',
  organization_name_dis: 'Organization name',
  organization_list: 'Organization name',
  organized_by_groups: 'Datasets are organized by groups.',
  organized_by_groups_for_function: 'Functions are organized by groups.',
  organizations_number: 'Number of organizations',
  organization_setting: 'Organization settings',
  org_user: 'Org users',
  org_user_list: 'Org user list',
  or: 'OR',
  /** dis-P */
  page: 'page',
  prev_revision: 'prev_revision',
  preview_timeout_try_again: 'Preview timeout, please try again',
  properties: 'Properties',
  partition: 'Partition',
  previewVariables: 'Preview variables',
  previewVariables_tooltip: 'The value is used to replace the variable in the raw request body. For example: Please fill in {val2} for the key of variable {val1}.',
  progress_header: 'Preparing {value} dataset(s)',
  profile: 'Profile',
  p_i_pwd: 'Please input your password.',
  pipeline_tips: 'To apply custom aggregation pipelines to the collection before sending it to Spark. For example: {val}',
  pending: 'Pending',
  publish: 'Publish',
  publish_api: 'Publish API',
  /** dis-Q */
  query_stopped: 'Query was stopped',
  /** dis-R */
  return_to: `Return to `,
  rawReqBody: 'Raw request body',
  rawReqBody_tooltip: 'During full or incremental update, the content of raw request body can be replaced by variables. Please use {val1} to pack variables, for example: {val2}',
  read_timeout: 'Read timeout (ms)',
  redo: 'Retry',
  relational: 'Relational database',
  request_timeout_try_again: 'Request timeout, please try again',
  reqBody: 'Request body',
  request_threads: 'Request threads',
  request_threads_desc: 'The number of threads executing requests concurrently.',
  regexp_dis_task_increment_integer_and_zero: 'Only positive integer and 0',
  retention_policy: 'Retention policy',
  retry_interval: 'Retry interval (ms)',
  retry_interval_desc: 'The time between retries. If the HTTP status code of response is not 20X, system will try again after the retry interval.',
  retry_times: 'Retry times',
  retry_times_desc: 'The number of retries. If the HTTP status code of response is not 20X, system will try again.',
  row_per_page: 'Rows Per Page',
  rowTag: 'Row tag',
  require_should_not_blank: 'Required field cannot be empty.',
  role: 'Role',
  reference: 'Reference',
  remove_duplicates: 'Remove duplicates',
  rule: 'Rule',
  rule_list: 'Rule list',
  /** dis-S */
  sql: 'SQL',
  save_exit: 'Save and exit',
  save_dataset: 'Save dataset',
  save_return_develop: 'Save and return to data development',
  same_name_error: 'A {name} with the same name already exists.',
  same_name_error_use_an: 'An {name} with the same name already exists.',
  same_dataset_name: 'A dataset with the same name already exists.',
  same_group_name: 'A group with the same name already exists.',
  same_task_name: 'A task with the same name already exists.',
  same_source_name: 'A data source with the same name already exists.',
  same_func_name: 'A function with the same name already exists.',
  same_org_name: 'A function with the same name already exists.',
  same_application_name_error_use_an: 'An application with the same name already exists.',
  save_as: 'Save as',
  save_new_dataset: 'Save as new dataset',
  save_new_dataset_name_where: 'Set dataset name and where it is saved to.',
  save_new_udf: 'Save as new function',
  save_new_name_where: 'Set {name} name and where it is saved to.',
  schema: 'Schema',
  schema_information: 'Schema information',
  select_data_source: 'Select data source type',
  select_database_connect: 'Select a type of data source to add',
  select_org: 'Select an organization',
  select_user: 'Select a user',
  show_table_rows: 'Up to {value} rows of data can be previewed.',
  show_table_rows_log: 'Up to {value} rows of data can be viewed.',
  show_table_rows_query: 'Up to {value} rows of data can be previewed.',
  sure_to_stop_processing_datasets: 'Are you sure you want to stop processing these datasets?',
  soapVersion: 'SOAP version',
  semiStructured: 'Semi-structured file',
  system_user_name: 'User name',
  system_settings: 'System settings',
  socket_timeout: 'Socket timeout (ms)',
  srp_frame: 'SRP frame',
  sure_to_save_dataset: 'Are you sure you want to save this datasets preview?',
  sure_to_delete_name: 'Are you sure you want to delete this {name}? All settings will be deleted.',
  sure_to_delete_group: 'Are you sure you want to delete this group?',
  group_can_not_delete: 'Deletion can only be performed when there is no data in the group.',
  role_can_not_delete: 'The role can only be deleted when no users are assigned to it. Please assign the associated users to other roles before attempting to delete this role.',
  sure_to_delete_dataset: 'Are you sure you want to delete this dataset?',
  sure_to_delete_datasets: 'Are you sure you want to delete these datasets?',
  sure_to_delete_job: 'Are you sure you want to delete this job? The related update logs will also be deleted.',
  sure_to_delete_function: 'Are you sure you want to delete this function?',
  sure_to_disable_name: 'Are you sure you want to disable "{name}"?',
  sure_to_enable_name: 'Are you sure you want to enable "{name}"?',
  sure_to_delete_org: 'Are you sure you want to delete this organization? All settings will be deleted.',
  sure_to_delete_driver: 'Are you sure you want to delete this driver? After deleting the driver, it is recommended to restart DataInsight to prevent any system abnormalities.',
  sure_to_delete_user: 'Are you sure you want to delete this user?',
  sure_to_delete_orgs: 'Are you sure you want to delete these organizations? All settings will be deleted.',
  sure_to_delete_drivers: 'Are you sure you want to delete these drivers? After deleting the driver, it is recommended to restart DataInsight to prevent any system abnormalities.',
  sure_to_delete_users: 'Are you sure you want to delete these users?',
  sure_to_delete_roles: 'Are you sure you want to delete these roles?',
  sure_to_delete_teams: 'Are you sure you want to delete these teams?',
  sure_to_delete_application: 'Are you sure you want to delete this application?',
  application_can_not_delete: 'Deletion can only be performed when there is no data in the application.',
  sure_to_create_new_one: 'Are you sure you want to create new one? Unsaved queries will be discarded.',
  sure_save_dataset: 'Are you sure you want to save this dataset?',
  sure_to_exit_development_mode: 'Are you sure you exit development mode? Unsaved query will be lost.',
  sure_to_delete_node: 'Are you sure you want to delete this node?',
  sure_to_delete_nodes: 'Are you sure you want to delete these node?',
  sure_to_delete_selected_data: 'Are you sure you want to delete the selected resources?',
  sure_to_switch_mode: 'Switching mode will delete the current mode files and is permanent and unrecoverable. Are you sure you want to switch?',
  stop_other_tasks: ' Task that is being enabled will be disabled.',
  switch_org_subTitle: 'Current org: {orgName}. Please select an organization to switch.',
  switch_org: 'Switch organization',
  system_admin_dis: 'System admin',
  s3_only: 'Local S3 only',
  select_data: 'Select data',
  set_dataset_name: 'Set dataset name',
  set_where_it_is_saved_to: 'Set where it is saved to.',
  select_destination: 'Select destination',
  select_folder_to_move: 'Please select a group to complete the move.',
  set_dataset: 'Set dataset',
  schema_setting: 'Schema settings',
  sign_in_sub: 'Sign in to WISE-IoTSuite/DataInsight',
  set_task: 'Set task',
  status: 'Status',
  select_data_sources: 'Select data sources',
  sample_size: 'Sample size',
  sample_size_tips: 'DataInsight will retrieve the specified data amount from the data source to form a sample pool, and then sample the specified data amount from the sample pool to analyze the schema of the data table. The sample size is the data amount sampled from the sample pool.',
  sample_pool_size: 'Sample pool size',
  sample_pool_size_tips: 'DataInsight will retrieve the specified data amount from the data source to form a sample pool, and then sample the specified data amount from the sample pool to analyze the schema of the data table. The sample pool size is the data amount retrieved from the data source.',
  set_job: 'Set job',
  select_table_type: 'Select table type',
  sort: 'Sort',
  switch: 'Switch',
  sure_clear_all_sheet: 'Are you sure you want to clear all the filled data?',
  sure_clear_all_query_data_sheet: 'After clicking the OK button, the currently displayed {length} records will be deleted from the dataset. Are you sure you want to proceed with the deletion?',
  /** dis-T */
  Table: 'Table',
  task: 'Task',
  task_list: 'Task list',
  task_name: 'Task name',
  task_status: 'Task status',
  task_setting: 'Task setting',
  technical_document_info: 'Click on any function to show writing instructions here.',
  team: 'Team',
  teams: 'Teams',
  team_list: 'Team list',
  team_name: 'Team name',
  timeSeries: 'Time-series database',
  total_data: 'total data',
  time_period: 'Time period',
  table_type: 'Table type',
  tool: 'Tool',
  table_not_empty: 'The filled data cannot be empty.',
  /** dis-U */
  update_in_progress: 'Update is in progress.',
  update_type_tips: 'Full Update: Re-fetch the data specified by the SQL statement and the entire data set will be rebuilt.',
  uploading: 'Uploading',
  // update_type_tips: 'Full Update: Re-fetch the data specified by the SQL statement and the entire data set will be rebuilt. \nIncremental update: Only update the data that were added after the previous update, without affecting the data in the original dataset.',
  update_strategy: 'Update strategy',
  update_setting: 'Update setting',
  update_type: 'Update type',
  update_log: 'Update log',
  update_now: 'Execute now',
  user_lower: 'user',
  user_list: 'User list',
  user_name_email: 'Username (E-mail)',
  /** dis-V */
  variable_reference_column: 'Variable reference column',
  variable_reference_column_desc: 'Used to replace the variables in raw request body.',
  variable_reference_table: 'Variable reference table',
  variable_reference_table_desc: 'The columns of this table are used to replace the variables in Raw Request Body. If used with incremental update, each row in this table is an independent HTTP request, and the responses of all requests will be stored.',
  visulization: 'Visulization',
  visualization_analysis: 'Visualization analysis',
  v_group: 'Group',
  v_dataset: 'Dataset',
  view_sql: 'View SQL',
  view_table: 'View table',
  view_table_tooltips: 'Used to query the data directly from the data source, without storing any data.',
  view_table_disabled_tooltips: 'Since the SQL involves datasets, it does not support to save as a view table.',
  view_current_version: 'View current version',
  /** dis-X */
  xsdContent: 'XSD content',
  /** dis-iFactory-menu */
  connector: 'Connector',
  data_setting: 'Data setting',
  data_retrieval: 'Data retrieval',
  data_analysis: 'Data analysis',
  iFactory_data_fabric: 'iFactory data fabric',
  general_fun: 'General functions',
  organizer: 'Organizer ',

  /** Parameters */
  preview_row_limit_tips: 'The row limit of data preview.',
  parameter_setting: 'Parameter setting',
  parameter_name: 'Parameter name',
  parameter_value: 'Parameter value',
  api_limitation: 'API limitations',
  internal_parameters: 'Internal parameters',
  api_url_tips: 'The public URL of DataInsight API.',
  internal_jdbc_endpoint_tips: 'The private endpoint of the JDBC interface. {val1} and {val2} are your SSO username and password.',
  external_jdbc_endpoint_tips: 'The public endpoint of the JDBC interface. {val1} and {val2} are your SSO username and password, and {val3} is the external IP of JDBC interface.',
  service_plan_tips: 'Service plan.',
  srpframe_url_tips: 'The URL setting of WISE-IoTSuite/SRPFrame.',
  twin_space_enabled_tips: 'Integration with Desk service.',
  query_row_limit_tips: 'The row limit of data query.',
  notification_url_tips: 'The URL setting of WISE-IoTSuite/Notification.',
  log_row_limit_tips: 'The row limit of update log.',
  dashboard_url_tips: 'The URL setting of WISE-IoTSuite/Dashboard.',
  bi_url_tips: 'The URL setting of WISE-IoTSuite/BI.',
  allowed_client_token_service_whitelist_tips: 'The ｗhitelist of service names that are allowed to use Client Token to call DataInsight API. (For multiple services use ; as separator.)',
  license_expiration_time: 'License expiration time.',
  sql_history_records: 'SQL historical records',
  retention_policy_days: 'The retention days for SQL history records.',
  vacuum_start_time: 'The daily start time for deleting SQL history records.',
  execution_time_second_threshold: 'If the SQL execution time in seconds is greater than this threshold, this SQL will be recorded.',


  /** Org role */
  system_default_role_cannot_modified: 'This is a system default role and cannot be modified.',
  resource_permissions: 'Resource permissions',
  role_name: 'Role name',
  createSource: 'Create data sources',
  createDataset: 'Create datasets',
  userManagement: 'Manage users',
  roleManagement: 'Manage roles',
  teamManagement: 'Manage teams',
  role_list: 'Role list',
  applications_groups_datasets: 'Applications/groups/datasets',
  dataset_action_view_permission_lang: 'View applications/groups/datasets',
  dataset_action_manage_permission_lang: 'Add, edit, delete applications/groups/datasets',
  source_action_view_permission_lang: 'View data sources',
  source_action_manage_permission_lang: 'Add, edit, delete data sources',
  groups_extension_functions: 'Groups/extension functions',
  udf_action_view_permission_lang: 'View groups/extension functions',
  udf_action_manage_permission_lang: 'Add, edit, delete groups/extension functions',
  user_action_manage_permission_lang: 'Add, edit, delete users',
  role_action_manage_permission_lang: 'Add, edit, delete roles',
  team_action_manage_permission_lang: 'Add, edit, delete teams',
  add_edit_delete: 'Add, edit, delete',

  /** Org team */
  team_lower: 'team',
  team_add: 'Add team',
  team_members: 'Team members',
  members: 'Members',
  no_add_members: 'No members, yet.',
  click_add_member: 'Click the "+" button to add members to the team.',
  member_list: 'Member list',

  /** Change password */
  new_password: 'New password',
  confirm_new_password: 'Confirm new password',
  old_new_password_can_not_same: 'The new password cannot be the same as the old password.',
  new_password_no_same: 'Inconsistent with the new password.',
  password_not_comply_rules: 'Password does not comply with rules.',
  password_rules: 'Password policy',
  password_rules_info_1: 'At least 8 characters, up to 20 characters',
  password_rules_info_2: 'At least 1 digit',
  password_rules_info_3: 'At least 1 lower case letter',
  password_rules_info_4: 'At least 1 upper case letter',
  password_rules_info_5: 'At least 1 special character',
  password_rules_info_6: 'Not contain spaces ( ), backslashes (\\), or double quotes (")',
  password_rules_info_7: 'The password cannot be the same as the last three passwords',

  /** Dataset sort */
  click_sort_asc: 'Click to sort ascending',
  click_sort_desc: 'Click to sort descending',
  index: 'Index',
  index_name: 'Index name',
  index_setting: 'Index settings',
  order_by: 'Order by',
  data_freshness_policy: 'Data freshness policy',
  query_cache: 'Query cache',
  query_cache_tips: 'Enable query cache or not. When the data of this dataset is queried, a cache with a time-to-live (TTL) will be created. The next time the same data is queried, the cache will be used directly. If the query covers multiple datasets at the same time, the cache time-to-live (TTL) will be the smallest. Please note that query cache does not apply to previews.',
  time_to_live_minutes: 'Time to live (minutes)',

  /** Login page */
  email_address: 'Username',
  username_email: 'Username',

  /** HTTP source */
  parameters_en: 'Parameters',
  query_parameters: 'Query parameters',
  authorization_en: 'Authorization',
  authorization_type: 'Authorization type',
  access_token_url: 'Access token URL',
  request_body: 'Request body',
  content_type: 'Content type',
  "application/json": 'application/json',
  json_data_request_body: 'JSON data (Request body)',
  json_data_request_body_tips: 'The request body in JSON format to get the token.',
  response_body: 'Response body',
  json_path_of_token_response_body: 'JSONPath of token (Response body)',
  json_path_of_token_response_body_tips: 'Define the JSONPath to get the token from the response body.',
  auto_refresh_token: 'Auto refresh token',
  every_hour: 'Every hour(s)',
  auto_refresh_token_interval_minute: 'Auto refresh token interval (minutes)',
  headers_en: 'Headers',
  body_en: 'Body',
  key_not_repeat: 'Duplicate key is not allowed.',
  default_variables: 'Default variables',
  default_variables_tips: 'Default values of variables. When variables are configured, the default values are used to infer the schema.',
  bearer_token_en: 'Bearer token',
  grant_type: 'Grant type',
  add_auth_data_to: 'Add authorization data to',
  header_prefix: 'Header prefix',
  client_id: 'Client ID',
  client_secret: 'Client secret',
  scope: 'Scope',
  client_authorization: 'Client authorization',
  'form-data_en': 'form-data',
  'x-www-form-urlencoded_en': 'x-www-form-urlencoded',
  number: 'Number',
  data_type: 'Data type',
  row_json_path: 'Row JSONPath',
  row_json_path_tips: 'The JSONPath used to extract row data from response body.',
  pagination_setting: 'Pagination setting',
  page_type: 'Page type',
  page_field: 'Page field',
  page_field_tips: 'The field name for page number or offset.',
  starting_value: 'Starting value',
  start_value_tips: 'The starting value of the page number or offset field.',
  page_number: 'Page number',
  dis_offset: 'Offset',
  page_size_field: 'Page size field',
  page_size_field_tips: 'The field name for page size.',
  page_size: 'Page size',
  page_size_tips: 'Number of data per page.',
  total_count_json_path: 'Total count JSONPath',
  total_count_json_path_tips: 'The JSONPath for total count field in response body.',
  concurrent_request_threads: 'Concurrent request threads',
  concurrent_request_threads_tips: 'The number of threads to execute requests concurrently. 1 represents executing requests in sequence.',
  auto_refresh_header_key_of_token: 'Header key of token',
  auto_refresh_header_key_of_token_tips: 'The header key of token.',
  auto_refresh_token_prefix_key: 'Header prefix of token',
  auto_refresh_token_prefix_key_tips: 'Added to the header value before the token.',
  auto_infer_number: 'Auto infer number',
  auto_infer_number_tips: 'Automatically infer the data type of Number in the input schema from data. When disabled, the data type is always Double.',

  /** JDBC source */
  delimited_identifier: 'Delimited identifier',
  delimited_identifier_tips: 'Delimited identifiers are enclosing identifiers (such as column names, table names, index names, etc.) in specific quoting symbols or characters. This practice allows using reserved words, special characters, or spaces within identifiers without conflicting with SQL syntax.',

  /** SAP RFC source */
  sap_version: 'SAP version',
  ashost: 'ASHOST',
  ashost_tips: 'The host name of a specific SAP application server.',
  sysnr: 'SYSNR',
  sysnr_tips: 'SAP system number.',
  client_no: 'Client',
  client_no_tips: 'Three-digit ABAP client number. Defines the client of the target ABAP system.',
  rfc_table_name: 'RFC table name',
  rfc_function_name: 'RFC function name',
  import_parameters: 'Import parameters',
  default_value: 'Default value',

  /** Organization export import */
  export_setting: 'Export setting',
  export_all: 'Export all',
  override: 'Override',
  override_tips: 'When importing a dataset with the same name, decide whether to overwrite or ignore it.',
  export_successfully: 'Export successfully!',
  import_setting: 'Import setting',
  place_select_import_resources: 'Please select at least one resource to export.',

  /** increment/full update */
  time_increment_interval: 'Time increment interval',
  minute_s: 'Minute(s)',
  hour_s: 'Hour(s)',
  day_s: 'Day(s)',
  failure_retry_strategy: 'Failure retry strategy',
  time_interval_seconds: 'Time interval (seconds)',
  condition: 'Condition',
  condition_type: 'Condition type',
  condition_value: 'Condition value',
  connection_timeout: 'Connection timeout (ms)',
  dis_start_number: 'Start number',
  parameter_type: 'Parameter type',
  incremental_update: 'Incremental update',
  incremental_update_now: 'Incremental update settings',
  incremental_update_setting: 'Incremental update setting',
  full_update_setting: 'Full update setting',
  preview_incremental_SQL: 'Preview execution SQL',
  preview_full_SQL: 'Preview execution SQL',
  last_n_days: 'Last N days',
  save_incremental_update_first: 'Please lock the incremental update setting before submitting.',
  save_full_update_first: 'Please lock the full update setting before submitting.',

  /** Driver management */
  driver: 'Driver',
  driver_lower: 'driver',
  driver_management: 'Driver management',
  driver_list: 'Driver list',
  class_name: 'Class name',
  file_name: 'File name',
  driver_name: 'Driver name',
  add_driver: 'Add driver',
  action: 'Action',
  num_drivers: '{num} driver(s)',

  /** tenant change notification */
  current_tenant_changed: 'The current tenant has changed',
  current_tenant_changed_reload_page: 'The current tenant has changed, the page will be refreshed in {time} seconds. Click the Refresh button if you don\'t want to wait.',

  /** Copilot */
  enter_message: 'Enter message',
  new_chat: 'New chat',
  dis_copilot: 'DataInsight Copilot',
  sure_to_delete_chat_message: 'Are you sure you want to delete this history?',
  ai_first_message: 'Hi! I\'m DataInsight Copilot, Nice to meet you!',
  'updated:': 'Updated: ',

  /** Monitoring */
  history: 'History',
  monitoring: 'Monitoring',
  sql_monitoring: 'SQL monitoring',
  sql_analysis: 'SQL analysis',
  search_sql_statements: 'Search SQL statements',
  sql_slow_counts: 'Total number of slow SQL queries',
  sql_slow_counts_chart: 'Slow SQL query trends',
  sql_slow_time: 'Slowest SQL query time',
  sql_slow_time_chart: 'Slowest SQL query trends',
  'execution_time(sec)': 'Execution time (sec)',
  start_time: 'Start time',
  end_time: 'End time',
  start_date: 'Start date',
  end_date: 'End date',
  sql_statements: 'SQL statements',
  times: 'Times',
  space_times: ' times',
  sec: 'Sec',
  space_sec: ' sec',
  sql_query_count: 'SQL slow query times',
  sql_query_time: 'SQL query time',
  real_time_analysis: 'Real-time analysis',

  /** Custom dataset share */
  public_link: 'Public link',
  anyone_with_link_can: 'Anyone with link can',
  can_only_view: 'Can only view',
  can_only_add_data: 'Can only add data',
  can_edit: 'Can edit',

  /** Built-in functions */
  built_in_functions: 'Built-in functions',
  "example:": 'Example: ',
  "result:": 'Result: ',

  /** Data filling  */
  filter_rows: 'Filter rows',
  filter_rule_list: 'Filter rule list',
  value1: 'Value 1',
  value2: 'Value 2',
  value1_not_greater_value2: 'First value must be less than the second value.',
  no_filling_permission: 'The dataset does not exist or has not been shared.',
  back_to_home: 'Back to {home}.',
  add_data: 'Add data',

  /** Data lineage  */
  data_lineage: 'Data lineage',
  table_view: 'Table view',
  column_view: 'Column view',
  script_view: 'SQL view',
  split: 'Split',

  /** Data dictionary  */
  data_dictionary: 'Data dictionary',
  data_list: 'Data list',
  schema_length: 'Schema ({length})',
  dataset_path: 'Dataset path',
  dataset_name_type_description: 'Dataset name, type, description',
  
  /** Levels */
  data_security: 'Data security',
  security_levels: 'Security levels',
  security_level: 'Security level',
  security_level_list: 'Security level list',
  num_security_levels: '{num} security level(s)',
  security_level_name: 'Security level name',
  security_level_name_lower: 'security level name',
  sure_to_delete_level: 'Are you sure you want to delete this level?',
  sure_to_delete_levels: 'Are you sure you want to delete these level?',
  max_level_allow: 'Up to 5 levels can be added',
  connected_dataset: 'Associated datasets',

  /** Job management */
  dis_pending: 'Pending',
  running: 'Running',
  finished: 'Finished',
  error: 'Error',
  abort: 'Aborted',

  /** New */
  nothing: 'None',
  update: 'Update',
  insert_on_conflict_strategy: 'Insert on conflict strategy',
  conflict_columns: 'Conflict columns',
  constraint_setting: 'Constraint settings',
  constraint: 'Constraint',
  constraint_name_repeat: 'Duplicate constraint names are not allowed.',
  constraint_name: 'Constraint name',
  constraint_type: 'Constraint type',
  unique_constraint: 'Unique constraint',
  level_info: 'Level info',
  executor: 'Executor',
  no_constraint_add_first: 'The column of UNIQUE constraint type is not found. Please edit the dataset and add a column of UNIQUE constraint type in the constraint settings before making a selection here.',
  task_no: 'No.',
  sepOption_1: 'Comma (,)',
  sepOption_2: 'Semicolon (;)',
  sepOption_3: 'Space ( )',
  sepOption_4: 'Tab key (\\t)',
  sepOption_5: 'Others',
  other_sep: 'Separator ',
  dis_sep_desc: 'A separator for each field and value. This separator can be one or more characters.',
  log_user: 'User',
  log_driver: 'Driver',
  log_parameter: 'Parameter',
  log_org: 'Organization',
  log_role: 'Role',
  log_team: 'Team',
  log_securityLevel: 'Security level',
  log_application: 'Application',
  log_group: 'Group',
  'log_dataset/message': 'Dataset/message',
  'log_dataset/updateType': 'Dataset/update strategy',
  'log_dataset/alarm': 'Dataset/alarm',
  log_udf: 'Extension function',
  log_source: 'Data source',
  log_job: 'Job',
  log_insert: 'Insert',
  log_edit: 'Edit',
  log_delete: 'Delete',
  operation_time: 'Operation time',
  operation_type: 'Operation type',
  target: 'Target',
  target_name: 'Target name',
  operational_logs: 'Operation logs',
  logs: 'Logs',
  format_sql: 'Format SQL',
  dis_full_update_tips: 'The dataset will be updated according to the setting values in the update setting.',
  server_selection_timeout: 'Server selection timeout (ms)',
  server_selection_timeout_tips: 'When a client attempts to establish a connection with MongoDB servers, a timeout error will be triggered if an available server cannot be selected within the specified time.',
  operator: 'Operator',
  fixed_survival_time: 'Fixed time-to-live (TTL)',
  api_url: 'API URL',
  tenant_id: 'Tenant ID',
  search_executor: 'Search executor',
  interface: 'Interface',
  source: 'Source',
  table_name: 'Table name',
  export_table: 'Export table',
  export_schema: 'Export schema',
  import_schema: 'Import schema',
  data_counts: 'Data counts',
  data_timezone: 'Data time zone',
  json: 'JSON',
  incremental_setting_start_time_tips: 'This start time is without time zone. If the column has a time zone setting in the source database, please convert the value in UTC+0 time zone.',
  policy_everyday_tips: 'The first execution time of refreshing cache, and then the cache will be refreshed at the same time every day.',
  fail_upload_fail_datatype: 'Cannot upload file, the file contains unsupported column types.',
  last_completed_time: 'Last successful execution time',
  api_token: 'API token',
  bucket: 'Bucket',
  influx_v2_org_tips: 'An organization is a workspace for a group of users.',
  influx_v2_bucket_tips: 'A bucket is a named location where data is stored that has a retention policy.',
  agent_builder: 'AI intelligent assistant',
  ai_chat_bot: 'Chat data',
  stop_sec: 'Stop ({time} Sec)',
  ai_assistant: 'AI assistant',
  ai_explain: 'Explain',
  ai_rewrite: 'Rewrite',
  ai_rewrite_ask: 'Rewrite write ask',
  ai_result: 'AI result',
  ai_assistant_placeholder: 'Ask AI anything...',
  try_again: 'Try again',
  discard: 'Discard',
  accept: 'Accept',
  ai_mirror_placeholder: 'Write something, or press ‘space’ for AI assistant...',
  copilot_enabled_tips: 'Copilot enabled',
  alarm_event: 'Alarm event',
  no_events: 'No events, yet.',
  no_events_tips: 'Click the \'Rule setting\' button to add rules!',
  rule_setting: 'Rule setting',
  event_id: 'Event ID',
  last_update_time: 'Last updated time',
  first_triggered_time: 'First triggered time',
  released_time: 'Released time',
  trigger_data: 'Trigger data',
  no_trigger_data_tips: 'Please select the row above.',
  gender: 'Gender',
  order: 'Order',
  department: 'Department',
  time: 'Time',
  rule_information: 'Rule information',
  trigger_rule: 'Trigger rule',
  trigger_rule_lower: 'trigger rule',
  trigger_rule_list: 'Trigger rule list',
  add_rule_tips: 'Click the \'+\' button to add some rules here!',
  trigger_rule_name: 'Trigger rule name',
  trigger_notification: 'Trigger notification',
  trigger_notification_group: 'Trigger notification',
  release_notification: 'Release notification',
  release_notification_group: 'Release notification',
  add_trigger_rule: 'Add trigger rule',
  trigger_rule_information: 'Trigger rule information',
  input_mode: 'Setting mode',
  input_mode_tips: 'After using advanced mode, if you wish to use basic mode, the settled rules will be cleared.',
  sql_editor: 'SQL editor',
  notification_setting: 'Notification setting',
  check_frequency: 'Check frequency',
  check_type: 'Check type',
  same_as_update_strategy: 'Same as update strategy',
  customized: 'Customized',
  basic_: 'Basic',
  value: 'Value',
  preview_execution_sql: 'Preview execution SQL',
  execution_sql: 'Execution SQL',
  last_updated_time: 'Last updated time',
  event_logs: 'Event logs',
  triggered: 'Triggered',
  released: 'Released',
  current_event: 'Current event',
  history_event: 'History event',
  switch_input_mode: 'Switch input mode',
  sure_switch_basic: 'Switching to basic mode will clear all entered content. Are you sure?',
  sure_switch_sql: 'Switching to SQL editor mode will clear all entered content. Are you sure?',
  partition_setting: 'Partition setting',
  portal_url_tips: 'The public URL of DataInsight portal.',
  alarm_log_records: 'Alarm log records',
  alarmlog_retention_policy_days: 'The retention days for alarm history logs.',
  alarmlog_vacuum_start_time: 'The daily start time for deleting alarm history logs.',
  event_center_enabled_tips: 'Integration with Event Center for alarm notification.',
  quota_management: 'Quota management',
  quota_overview: 'Quota overview',
  quota_settings: 'Quota settings',
  resource_group: 'Resource group',
  log_resourcegroup: 'Resource group',
  resource_group_lower: 'resource group',
  resource_info: 'Resource information',
  resource_group_list: 'Resource group list',
  resource_group_name: 'Resource group name',
  sure_to_delete_resource_group: 'Are you sure you want to delete this resource group? All settings will be deleted.',
  sure_to_delete_resource_groups: 'Are you sure you want to delete these resource groups? All settings will be deleted.',
  num_resource_group: '{num} resource group(s)',
  add_resource_group: 'Add resource group',
  resource_monitor: 'Resource monitor',
  driver_memory_unit: 'Drive memory (GiB)',
  driver_memory: 'Drive memory',
  resource_list: 'Resource list',
  sec_lower: 'sec',
  gib: 'GiB',
  cores: 'Cores',
  space_gib: ' GiB',
  space_cores: ' cores',
  cores_lower: 'cores',
  'cpu:': 'CPU: ',
  'memory:': 'Memory: ',
  'cpu': 'CPU',
  'memory': 'Memory',
  resource_total: 'Total number of resources',
  driver_resource_total: 'Total number of drive resources',
  executor_resource_total: 'Total number of executor resources',
  resource_chart: 'Resource trends',
  executor_counts: 'Executor count(s)',
  executor_cpu_unit: 'Executor CPU (Cores)',
  executor_memory_unit: 'Executor memory (GiB)',
  executor_cpu: 'Executor CPU',
  executor_memory: 'Executor memory',
  binding_org: 'Binding organization(s)',
  resource_driver: 'Drive',
  resource_executor: 'Executor',
  metric_management: 'Metric management',
  metric_develop: 'Metric development',
  metric_catalog: 'Metric catalog',
  metric_name: 'Metric name',
  metric_code: 'Metric code',
  metric_definition: 'Metric definition',
  no_metric_list: 'No metric, yet.',
  select_add_group_first: 'To add or select a group from the left panel.',
  atomic_metric: 'Atomic metric',
  derived_metric: 'Derived metric',
  composite_metric: 'Composite metric',
  add_atomic_metric: 'Add atomic metric',
  add_derived_metric: 'Add derived metric',
  add_composite_metric: 'Add composite metric',
  save_destination: 'Save destination',
  business_properties: 'Business properties',
  computational_attributes: 'Computational attributes',
  metric_column: 'Metric column',
  aggregation_method: 'Aggregation method',
  dimension_management: 'Dimension management',
  data_scope: 'Data scope',
  full_data: 'Full data',
  incremental_data: 'Incremental data',
  unsupported_data_scope_full: 'Cannot use full data check, please modify!',
  unsupported_data_scope_incremental: 'Cannot use incremental data check, please modify!',
  request_table_size: 'Request tablet size',
  request_table_size_tips: 'The smaller this value is set, the more partitions will be generated. This will increase the parallelism on the Spark side, but at the same time will cause greater pressure on Doris.',
  batch_size: 'Batch size',
  batch_size_tips: 'The maximum number of rows to read data from BE at one time. Increasing this value can reduce the number of connections between Spark and Doris. Thereby reducing the extra time overhead caused by network delay.',
  query_memory_limit: 'Query memory limit (MB)',
  query_memory_limit_tips: 'Memory limit for a single query in bytes.',
  query_timeout: 'Query timeout (s)',
  dataset_no_enabled_job: 'This dataset has no associated enabled jobs',
  function_group_name_string_and_binary_functions: "String and binary functions",
  function_group_name_numeric_scalar_functions: "Numeric scalar functions",
  function_group_name_aggregate_functions: "Aggregate functions",
  function_group_name_ranking_window_functions: "Ranking window functions",
  function_group_name_analytic_window_functions: "Analytic window functions",
  function_group_name_array_functions: "Array functions",
  function_group_name_map_functions: "Map functions",
  function_group_name_date_timestamp_and_interval_functions: "Date, timestamp, and interval functions",
  function_group_name_cast_functions_and_constructors: "Cast functions and constructors",
  function_group_name_csv_functions: "CSV functions",
  function_group_name_json_functions: "JSON functions",
  function_group_name_xpath_functions: "XPath functions",
  function_group_name_miscellaneous_functions: "Miscellaneous functions",
  function_des_aes_decrypt: "Returns a decrypted value of expr using AES in mode with padding.",
  function_des_aes_encrypt: "Returns an encrypted value of expr using AES in given mode with the specified padding.",
  function_des_ascii: "Returns the ASCII code point of the first character of str.",
  function_des_base64: "Converts expr to a base 64 string.",
  function_des_bin: "Returns the binary representation of expr.",
  function_des_binary: "Casts the value of expr to BINARY.",
  function_des_bit_length: "Returns the bit length of string data or number of bits of binary data.",
  function_des_btrim: "Removes the leading and trailing space characters from str.",
  function_des_char: "Returns the character at the supplied UTF-16 code point.",
  function_des_char_length: "Returns the character length of string data or number of bytes of binary data.",
  function_des_character_length: "Returns the character length of string data or number of bytes of binary data.",
  function_des_chr: "Returns the character at the supplied UTF-16 code point.",
  function_des_concat: "Returns the concatenation of the arguments.",
  function_des_concat_ws: "Returns the concatenation strings separated by sep.",
  function_des_contains: "Returns a boolean. The value is True if right is found inside left. Returns NULL if either input expression is NULL. Otherwise, returns False. Both left or right must be of STRING or BINARY type.",
  function_des_crc32: "Returns a cyclic redundancy check value of expr.",
  function_des_decode: "Translates binary expr to a string using the character set encoding charSet.",
  function_des_encode: "Returns the binary representation of a string using the charSet character encoding.",
  function_des_endswith: "Returns a boolean. The value is True if left ends with right. Returns NULL if either input expression is NULL. Otherwise, returns False. Both left or right must be of STRING or BINARY type.",
  function_des_find_in_set: "Returns the position of a string within a comma-separated list of strings.",
  function_des_format_number: "Formats expr like #,###,###.##, rounded to scale decimal places.",
  function_des_format_string: "Returns a formatted string from printf-style format strings.",
  function_des_hex: "Converts expr to hexadecimal.",
  function_des_initcap: "Returns expr with the first letter of each word in uppercase.",
  function_des_instr: "Returns the (1-based) index of the first occurrence of substr in str.",
  function_des_lcase: "Returns expr with all characters changed to lowercase.",
  function_des_left: "Returns the leftmost len characters from str.",
  function_des_len: "Returns the character length of string data or number of bytes of binary data. The length of string data includes the trailing spaces. The length of binary data includes binary zeros.",
  function_des_length: "Returns the character length of string data or number of bytes of binary data.",
  function_des_levenshtein: "Returns the Levenshtein distance between the strings str1 and str2.",
  function_des_locate: "Returns the position of the first occurrence of substr in str after position pos.",
  function_des_lower: "Returns expr with all characters changed to lowercase.",
  function_des_lpad: "Returns expr, left-padded with pad to a length of len.",
  function_des_ltrim: "Returns str with leading characters within trimstr removed.",
  function_des_mask: "Masks the given string value. The function replaces characters with 'X' or 'x', and numbers with 'n'. This can be useful for creating copies of tables with sensitive information removed.",
  function_des_md5: "Returns an MD5 128-bit checksum of expr as a hex string.",
  function_des_octet_length: "Returns the byte length of string data or number of bytes of binary data.",
  function_des_overlay: "Replaces input with replace that starts at pos and is of length len.",
  function_des_parse_url: "Extracts a part from url.",
  function_des_position: "Returns the position of the first occurrence of substr in str after position pos.",
  function_des_printf: "Returns a formatted string from printf-style format strings.",
  function_des_regexp_count: "Returns a count of the number of times that the regular expression pattern regexp is matched in the string str.",
  function_des_regexp_extract: "Extracts the first string in str that matches the regexp expression and corresponds to the regex group index.",
  function_des_regexp_extract_all: "Extract all strings in the str that match the regexp expression and corresponding to the regex group index.",
  function_des_regexp_instr: "Searches a string for a regular expression and returns an integer that indicates the beginning position of the matched substring. Positions are 1-based, not 0-based. If no match is found, returns 0.",
  function_des_regexp_replace: "Replaces all substrings of str that match regexp with rep.",
  function_des_regexp_substr: "Returns the substring that matches the regular expression regexp within the string str. If the regular expression is not found, the result is null.",
  function_des_repeat: "Returns the string that repeats expr n times.",
  function_des_replace: "Replaces all occurrences of search with replace.",
  function_des_reverse: "Returns a reversed string or an array with reverse order of elements.",
  function_des_right: "Returns the rightmost len characters from the string str.",
  function_des_rpad: "Returns expr, right-padded with pad to a length of len.",
  function_des_rtrim: "Returns str with trailing characters removed.",
  function_des_sentences: "Splits str into an array of array of words.",
  function_des_sha: "Returns a sha1 hash value as a hex string of expr.",
  function_des_sha1: "Returns a sha1 hash value as a hex string of expr.",
  function_des_sha2: "Returns a checksum of the SHA-2 family as a hex string of expr.",
  function_des_soundex: "Returns the soundex code of the string.",
  function_des_space: "Returns a string consisting of n spaces.",
  function_des_split: "Splits str around occurrences that match regex and returns an array with a length of at most limit.",
  function_des_split_part: "Splits str by delimiter and return requested part of the split (1-based). If any input is null, returns null. if partNum is out of range of split parts, returns empty string. If partNum is 0, throws an error. If partNum is negative, the parts are counted backward from the end of the string. If the delimiter is an empty string, the str is not split.",
  function_des_startswith: "Returns a boolean. The value is True if expr starts with startExpr. Returns NULL if either input expression is NULL. Otherwise, returns False. Both expr or startExpr must be of STRING or BINARY type.",
  function_des_string: "Casts the value expr to STRING.",
  function_des_substr: "Returns the substring of expr that starts at pos and is of length len.",
  function_des_substring: "Returns the substring of expr that starts at pos and is of length len.",
  function_des_substring_index: "Returns the substring of expr before count occurrences of the delimiter delim.",
  function_des_to_binary: "Converts the input str to a binary value based on the supplied fmt. fmt can be a case-insensitive string literal of \"hex\", \"utf-8\", \"utf8\", or \"base64\". By default, the binary format for conversion is \"hex\" if fmt is omitted. The function returns NULL if at least one of the input parameters is NULL.",
  function_des_to_char: "Convert numberExpr to a string based on the formatExpr.",
  function_des_to_number: "Convert string 'expr' to a number based on the string format 'fmt'.",
  function_des_translate: "Returns an expr where all characters in from have been replaced with those in to.",
  function_des_trim: "Trim characters from a string.",
  function_des_try_to_binary: "This is a special version of to_binary that performs the same operation, but returns a NULL value instead of raising an error if the conversion cannot be performed.",
  function_des_ucase: "Returns expr with all characters changed to uppercase.",
  function_des_unbase64: "Returns a decoded base64 string as binary.",
  function_des_unhex: "Converts hexadecimal expr to BINARY.",
  function_des_upper: "Returns expr with all characters changed to uppercase.",
  function_des_url_decode: "Decodes a str in 'application/x-www-form-urlencoded' format using a specific encoding scheme.",
  function_des_url_encode: "Translates a string into 'application/x-www-form-urlencoded' format using a specific encoding scheme.",
  function_des_abs: "Returns the absolute value of the numeric value in expr.",
  function_des_acos: "Returns the inverse cosine (arccosine) of expr.",
  function_des_acosh: "Returns the inverse hyperbolic cosine of expr.",
  function_des_asin: "Returns the inverse sine (arcsine) of expr.",
  function_des_asinh: "Returns the inverse hyperbolic sine of expr.",
  function_des_atan: "Returns the inverse tangent (arctangent) of expr.",
  function_des_atan2: "Returns the angle in radians between the positive x-axis of a plane and the point specified by the coordinates (exprX, exprY).",
  function_des_atanh: "Returns inverse hyperbolic tangent of expr.",
  function_des_bigint: "Casts the value expr to BIGINT.",
  function_des_bit_count: "Returns the number of bits set in the argument.",
  function_des_bit_get: "Returns the value of the bit (0 or 1) at the specified position. The positions are numbered from right to left, starting at zero.",
  function_des_bround: "Returns the rounded expr using HALF_EVEN rounding mode.",
  function_des_cbrt: "Returns the cube root of expr.",
  function_des_ceil: "Returns the smallest number not smaller than expr rounded up to targetScale digits relative to the decimal point.",
  function_des_ceiling: "Returns the smallest number not smaller than expr rounded up to targetScale digits relative to the decimal point.",
  function_des_conv: "Converts num from fromBase to toBase.",
  function_des_convert_timezone: "Converts the timestamp without time zone sourceTs from the sourceTz time zone to targetTz.",
  function_des_cos: "Returns the cosine of expr.",
  function_des_cosh: "Returns the hyperbolic cosine of expr.",
  function_des_cot: "Returns the cotangent of expr.",
  function_des_csc: "Returns the cosecant of expr, as if computed by 1/java.lang.Math.sin.",
  function_des_degrees: "Converts radians to degrees.",
  function_des_double: "Casts the value expr to DOUBLE.",
  function_des_e: "Returns the constant e.",
  function_des_exp: "Returns e to the power of expr.",
  function_des_expm1: "Returns exp(expr) - 1.",
  function_des_factorial: "Returns the factorial of expr.",
  function_des_float: "Casts the value expr to FLOAT.",
  function_des_floor: "Returns the largest number not smaller than expr rounded down to targetScale digits relative to the decimal point.",
  function_des_getbit: "Returns the value of the bit (0 or 1) at the specified position. The positions are numbered from right to left, starting at zero. The position argument cannot be negative.",
  function_des_hypot: "Returns sqrt(expr1 * expr1 + expr2 * expr2).",
  function_des_int: "Casts the value expr to INTEGER.",
  function_des_isnan: "Returns true if expr is NaN.",
  function_des_ln: "Returns the natural logarithm (base e) of expr.",
  function_des_log: "Returns the logarithm of expr with base.",
  function_des_log10: "Returns the logarithm of expr with base 10.",
  function_des_log1p: "Returns log(1 + expr).",
  function_des_log2: "Returns the logarithm of expr with base 2.",
  function_des_mod: "Returns the remainder after dividend / divisor.",
  function_des_nanvl: "Returns expr1 if it`s not NaN, or expr2 otherwise.",
  function_des_negative: "Returns the negated value of expr.",
  function_des_pi: "Returns pi.",
  function_des_pmod: "Returns the positive remainder after dividend / divisor.",
  function_des_positive: "Returns the value of expr.",
  function_des_pow: "Raises expr1 to the power of expr2.",
  function_des_power: "Raises expr1 to the power of expr2.",
  function_des_radians: "Converts expr in degrees to radians.",
  function_des_rand: "Returns a random value between 0 and 1.",
  function_des_randn: "Returns a random value from a standard normal distribution.",
  function_des_random: "Returns a random value between 0 and 1.",
  function_des_rint: "Returns expr rounded to a whole number as a DOUBLE.",
  function_des_round: "Returns the rounded expr using HALF_UP rounding mode.",
  function_des_shiftleft: "Returns a bitwise left shifted by n bits.",
  function_des_shiftright: "Returns a bitwise signed right shifted by n bits.",
  function_des_shiftrightunsigned: "Returns a bitwise unsigned right shifted by n bits.",
  function_des_sign: "Returns -1.0, 0.0, or 1.0 as expr is negative, 0, or positive.",
  function_des_signum: "Returns -1.0, 0.0, or 1.0 as expr is negative, 0, or positive.",
  function_des_sec: "Returns the secant of expr, as if computed by 1/java.lang.Math.cos.",
  function_des_sin: "Returns the sine of expr.",
  function_des_sinh: "Returns the hyperbolic sine of expr.",
  function_des_sqrt: "Returns the square root of expr.",
  function_des_tan: "Returns the tangent of expr.",
  function_des_tanh: "Returns the hyperbolic tangent of expr.",
  function_des_try_add: "Returns the sum of expr1and expr2 and the result is null on overflow. The acceptable input types are the same with the + operator.",
  function_des_try_divide: "Returns dividend/divisor. It always performs floating point division. Its result is always null if expr2 is 0. dividend must be a numeric or an interval. divisor must be a numeric.",
  function_des_try_multiply: "Returns expr1*expr2 and the result is null on overflow. The acceptable input types are the same with the * operator.",
  function_des_try_subtract: "Returns expr1-expr2 and the result is null on overflow. The acceptable input types are the same with the - operator.",
  function_des_try_to_number: "Use formatted fmt to cast expr to decimal, and return NULL if expr does not match the format.",
  function_des_width_bucket: "Returns the bucket number to which value would be assigned in an equiwidth histogram with num_bucket buckets, in the range min_value to max_value.",
  function_des_any: "Returns true if at least one value of expr in the group is true.",
  function_des_any_value: "Returns some value of expr for a group of rows.",
  function_des_approx_count_distinct: "Returns the estimated number of distinct values in expr within the group.",
  function_des_approx_percentile: "Returns the approximate percentile of the expr within the group.",
  function_des_array_agg: "Collects and returns a list of non-unique elements.",
  function_des_avg: "Returns the mean calculated from values of a group.",
  function_des_bit_and: "Returns the bitwise AND of all input values in the group.",
  function_des_bit_or: "Returns the bitwise OR of all input values in the group.",
  function_des_bit_xor: "Returns the bitwise XOR of all input values in the group.",
  function_des_bool_and: "Returns true if all values in expr are true within the group.",
  function_des_bool_or: "Returns true if at least one value in expr is true within the group.",
  function_des_collect_list: "Returns an array consisting of all values in expr within the group.",
  function_des_collect_set: "Returns an array consisting of all unique values in expr within the group.",
  function_des_corr: "Returns Pearson coefficient of correlation between a group of number pairs.",
  function_des_count: "Returns the total number of retrieved rows in a group, including rows containing null.",
  function_des_count_if: "Returns the number of true values for the group in expr.",
  function_des_count_min_sketch: "Returns a count-min sketch of a column with the given esp, confidence and seed. The result is an array of bytes, which can be deserialized to a CountMinSketch before usage. Count-min sketch is a probabilistic data structure used for cardinality estimation using sub-linear space.",
  function_des_covar_pop: "Returns the population covariance of number pairs in a group.",
  function_des_covar_samp: "Returns the sample covariance of number pairs in a group.",
  function_des_every: "Returns true if all values of expr in the group are true.",
  function_des_first: "Returns the first value of expr for a group of rows.",
  function_des_first_value: "Returns the first value of expr for a group of rows.",
  function_des_kurtosis: "Returns the kurtosis value calculated from values of a group.",
  function_des_last: "Returns the last value of expr for the group of rows.",
  function_des_last_value: "Returns the last value of expr for the group of rows.",
  function_des_max: "Returns the maximum value of expr in a group.",
  function_des_max_by: "Returns the value of an expr1 associated with the maximum value of expr2 in a group.",
  function_des_mean: "Returns the mean calculated from values of a group.",
  function_des_median: "Returns the median of numeric or ANSI interval column col.",
  function_des_min: "Returns the minimum value of expr in a group.",
  function_des_min_by: "Returns the value of an expr1 associated with the minimum value of expr2 in a group.",
  function_des_mode: "Returns the most frequent value for the values within col. NULL values are ignored. If all the values are NULL, or there are 0 rows, returns NULL.",
  function_des_percentile: "Returns the exact percentile value of expr at the specified percentage.",
  function_des_percentile_approx: "Returns the approximate percentile of the expr within the group.",
  function_des_regr_avgx: "Returns the average of the independent variable for non-null pairs in a group, where y is the dependent variable and x is the independent variable.",
  function_des_regr_avgy: "Returns the average of the dependent variable for non-null pairs in a group, where y is the dependent variable and x is the independent variable.",
  function_des_regr_count: "Returns the number of non-null number pairs in a group, where y is the dependent variable and x is the independent variable.",
  function_des_regr_intercept: "Returns the intercept of the univariate linear regression line for non-null pairs in a group, where y is the dependent variable and x is the independent variable.",
  function_des_regr_r2: "Returns the coefficient of determination for non-null pairs in a group, where y is the dependent variable and x is the independent variable.",
  function_des_regr_slope: "Returns the slope of the linear regression line for non-null pairs in a group, where y is the dependent variable and x is the independent variable.",
  function_des_regr_sxx: "Returns REGR_COUNT(y, x) * VAR_POP(x) for non-null pairs in a group, where y is the dependent variable and x is the independent variable.",
  function_des_regr_sxy: "Returns REGR_COUNT(y, x) * COVAR_POP(y, x) for non-null pairs in a group, where y is the dependent variable and x is the independent variable.",
  function_des_regr_syy: "Returns REGR_COUNT(y, x) * VAR_POP(y) for non-null pairs in a group, where y is the dependent variable and x is the independent variable.",
  function_des_skewness: "Returns the skewness value calculated from values of a group.",
  function_des_some: "Returns true if at least one value of expr is true.",
  function_des_std: "Returns the sample standard deviation calculated from the values within the group.",
  function_des_stddev: "Returns the sample standard deviation calculated from the values within the group.",
  function_des_stddev_pop: "Returns the population standard deviation calculated from values of a group.",
  function_des_stddev_samp: "Returns the sample standard deviation calculated from values of a group.",
  function_des_sum: "Returns the sum calculated from values of a group.",
  function_des_try_avg: "Returns the mean calculated from values of a group and the result is null on overflow.",
  function_des_try_sum: "Returns the sum calculated from values of a group and the result is null on overflow.",
  function_des_var_pop: "Returns the population variance calculated from values of a group.",
  function_des_var_samp: "Returns the sample variance calculated from values of a group.",
  function_des_variance: "Returns the sample variance calculated from values of a group.",
  function_des_dense_rank: "Returns the rank of a value compared to all values in the partition.",
  function_des_ntile: "Divides the rows for each window partition into n buckets ranging from 1 to at most n.",
  function_des_percent_rank: "Computes the percentage ranking of a value within the partition.",
  function_des_rank: "Returns the rank of a value compared to all values in the partition.",
  function_des_row_number: "Assigns a unique, sequential number to each row, starting with one, according to the ordering of rows within the window partition.",
  function_des_cume_dist: "Returns the position of a value relative to all values in the partition.",
  function_des_lag: "Returns the value of expr from a preceding row within the partition.",
  function_des_lead: "Returns the value of expr from a subsequent row within the partition.",
  function_des_nth_value: "Returns the value of input at the row that is the offsetth row from beginning of the window frame. Offset starts at 1. If ignoreNulls=true, we will skip nulls when finding the offsetth row. Otherwise, every row counts for the offset. If there is no such an offsetth row (e.g., when the offset is 10, size of the window frame is less than 10), null is returned.",
  function_des_aggregate: "Aggregates elements in an array using a custom aggregator.",
  function_des_array: "Returns an array with the elements in expr.",
  function_des_array_append: "Add the element at the end of the array passed as first argument.",
  function_des_array_compact: "Removes null values from the array.",
  function_des_array_contains: "Returns true if array contains value.",
  function_des_array_distinct: "Removes duplicate values from array.",
  function_des_array_except: "Returns an array of the elements in array1 but not in array2.",
  function_des_array_insert: "Places val into index pos of array x.",
  function_des_array_intersect: "Returns an array of the elements in the intersection of array1 and array2, without duplicates.",
  function_des_array_join: "Concatenates the elements of array.",
  function_des_array_max: "Returns the maximum value in array.",
  function_des_array_min: "Returns the minimum value in array.",
  function_des_array_position: "Returns the position of the first occurrence of element in array.",
  function_des_array_remove: "Removes all occurrences of element from array.",
  function_des_array_repeat: "Returns an array containing element count times.",
  function_des_array_size: "Returns the size of an array.",
  function_des_array_sort: "Returns array sorted according to func.",
  function_des_array_union: "Returns an array of the elements in the union of array1 and array2 without duplicates.",
  function_des_arrays_overlap: "Returns true if the intersection of array1 and array2 is not empty.",
  function_des_arrays_zip: "Returns a merged array of structs in which the nth struct contains all Nth values of input arrays.",
  function_des_cardinality: "Returns the size of expr.",
  function_des_element_at: "Returns the element of an arrayExpr at index.",
  function_des_exists: "Returns true if pred is true for any element in expr.",
  function_des_explode: "Returns rows by un-nesting collection.",
  function_des_explode_outer: "Returns rows by un-nesting expr using outer semantics.",
  function_des_filter: "Filters the array in expr using the function func.",
  function_des_flatten: "Transforms an array of arrays into a single array.",
  function_des_forall: "Tests whether func holds for all elements in the array.",
  function_des_get: "Returns element of array at given (0-based) index. If the index points outside of the array boundaries, then this function returns NULL.",
  function_des_inline: "Explodes an array of structs into a table.",
  function_des_inline_outer: "Explodes an array of structs into a table with outer semantics.",
  function_des_posexplode: "Returns rows by un-nesting the array with numbering of positions.",
  function_des_posexplode_outer: "Returns rows by un-nesting the array with numbering of positions using OUTER semantics.",
  function_des_reduce: "Applies a binary operator to an initial state and all elements in the array, and reduces this to a single state. The final state is converted into the final result by applying a finish function.",
  function_des_sequence: "Generates an array of elements from start to stop (inclusive), incrementing by step.",
  function_des_shuffle: "Returns a random permutation of the array in expr.",
  function_des_size: "Returns the cardinality of expr.",
  function_des_slice: "Returns a subset of an array.",
  function_des_sort_array: "Returns the array in expr in sorted order.",
  function_des_transform: "Transforms elements in an array in expr using the function func.",
  function_des_try_element_at: "Returns element of array at given (1-based) index.",
  function_des_zip_with: "Merges the arrays in expr1 and expr2, element-wise, into a single array using func.",
  function_des_map: "Creates a map with the specified key-value pairs.",
  function_des_map_concat: "Returns the union of all expr map expressions.",
  function_des_map_contains_key: "Returns true if the map contains the key.",
  function_des_map_entries: "Returns an unordered array of all entries in map.",
  function_des_map_filter: "Filters entries in the map in expr using the function func.",
  function_des_map_from_arrays: "Creates a map with a pair of the keys and values arrays.",
  function_des_map_from_entries: "Creates a map created from the specified array of entries.",
  function_des_map_keys: "Returns an unordered array containing the keys of map.",
  function_des_map_values: "Returns an unordered array containing the values of map.",
  function_des_map_zip_with: "Merges map1 and map2 into a single map.",
  function_des_str_to_map: "Returns a map after splitting expr into key-value pairs using delimiters.",
  function_des_transform_keys: "Transforms keys in a map in expr using the function func.",
  function_des_transform_values: "Transforms values in a map in expr using the function func.",
  function_des_add_months: "Returns the date that is numMonths after startDate.",
  function_des_curdate: "Returns the current date at the start of query evaluation. All calls of curdate within the same query return the same value.",
  function_des_current_date: "Returns the current date at the start of query evaluation.",
  function_des_current_timestamp: "Returns the current timestamp at the start of query evaluation.",
  function_des_current_timezone: "Returns the current session local timezone.",
  function_des_date: "Casts the value expr to DATE.",
  function_des_date_add: "Returns the date numDays after startDate.",
  function_des_dateadd: "Adds value units to a timestamp expr.",
  function_des_date_diff: "Returns the number of days from startDate to endDate.",
  function_des_date_from_unix_date: "Create date from the number of days since 1970-01-01.",
  function_des_date_format: "Converts a timestamp to a string in the format fmt.",
  function_des_date_part: "Extracts a part of the date, timestamp, or interval.",
  function_des_date_sub: "Returns the date numDays before startDate.",
  function_des_date_trunc: "Returns timestamp truncated to the field specified in unit.",
  function_des_datediff: "Returns the number of days from startDate to endDate.",
  function_des_day: "Returns the day of month of the date or timestamp.",
  function_des_dayofmonth: "Returns the day of month of the date or timestamp.",
  function_des_dayofweek: "Returns the day of week of the date or timestamp.",
  function_des_dayofyear: "Returns the day of year of the date or timestamp.",
  function_des_extract: "Returns field of source.",
  function_des_from_unixtime: "Returns unixTime in fmt.",
  function_des_from_utc_timestamp: "Returns a timestamp in expr specified in UTC in the timezone timeZone.",
  function_des_hour: "Returns the hour component of a timestamp.",
  function_des_last_day: "Returns the last day of the month that the date belongs to.",
  function_des_make_date: "Creates a date from year, month, and day fields.",
  function_des_make_dt_interval: "Make DayTimeIntervalType duration from days, hours, mins and secs.",
  function_des_make_interval: "Creates an interval from years, months, weeks, days, hours, mins and secs.",
  function_des_make_timestamp: "Creates a timestamp from year, month, day, hour, min, sec, and timezone fields.",
  function_des_make_ym_interval: "Make year-month interval from years, months.",
  function_des_minute: "Returns the minute component of the timestamp in expr.",
  function_des_month: "Returns the month component of the timestamp in expr.",
  function_des_months_between: "Returns the number of months elapsed between dates or timestamps in expr1 and expr2.",
  function_des_next_day: "Returns the first date which is later than expr and named as in dayOfWeek.",
  function_des_now: "Returns the current timestamp at the start of query evaluation.",
  function_des_quarter: "Returns the quarter of the year for expr in the range 1 to 4.",
  function_des_second: "Returns the second component of the timestamp in expr.",
  function_des_timestamp: "Casts expr to TIMESTAMP.",
  function_des_timestamp_micros: "Creates timestamp from the number of microseconds since UTC epoch.",
  function_des_timestamp_millis: "Creates timestamp from the number of milliseconds since UTC epoch.",
  function_des_timestamp_seconds: "Creates timestamp from the number of seconds (can be fractional) since UTC epoch.",
  function_des_to_date: "Returns expr cast to a date using an optional formatting.",
  function_des_to_timestamp: "Returns expr cast to a timestamp using an optional formatting.",
  function_des_to_unix_timestamp: "Returns the timestamp in expr as a UNIX timestamp.",
  function_des_to_utc_timestamp: "Returns the timestamp in expr in a different timezone as UTC.",
  function_des_trunc: "Returns a date with the a portion of the date truncated to the unit specified by the format model fmt.",
  function_des_try_to_timestamp: "Parses the timestamp_str expression with the fmt expression to a timestamp. The function always returns null on an invalid input with/without ANSI SQL mode enabled. By default, it follows casting rules to a timestamp if the fmt is omitted. The result data type is consistent with the value of configuration spark.sql.timestampType.",
  function_des_unix_date: "Returns the number of days since 1970-01-01.",
  function_des_unix_micros: "Returns the number of microseconds since 1970-01-01 00:00:00 UTC.",
  function_des_unix_millis: "Returns the number of milliseconds since 1970-01-01 00:00:00 UTC. Truncates higher levels of precision.",
  function_des_unix_seconds: "Returns the number of seconds since 1970-01-01 00:00:00 UTC. Truncates higher levels of precision.",
  function_des_unix_timestamp: "Returns the UNIX timestamp of current or specified time.",
  function_des_weekday: "Returns the day of the week of expr.",
  function_des_weekofyear: "Returns the week of the year of expr.",
  function_des_year: "Returns the year component of expr.",
  function_des_window: "Bucketize rows into one or more time windows given a timestamp specifying column. Window starts are inclusive but the window ends are exclusive, e.g. 12:05 will be in the window [12:05,12:10) but not in [12:00,12:05). Windows can support microsecond precision. Windows in the order of months are not supported.",
  function_des_window_time: "Extract the time value from time/session window column which can be used for event time value of window. The extracted time is (window.end - 1) which reflects the fact that the the aggregating windows have exclusive upper bound - [start, end).",
  function_des_boolean: "Casts expr to Boolean.",
  function_des_cast: "Casts the value expr to the target data type type.",
  function_des_decimal: "Casts the value expr to DECIMAL.",
  function_des_named_struct: "Creates a struct with the specified field names and values.",
  function_des_smallint: "Casts the value expr to SMALLINT.",
  function_des_struct: "Creates a STRUCT with the specified field values.",
  function_des_tinyint: "Casts expr to TINYINT.",
  function_des_from_csv: "Returns a struct value with the csvStr and schema.",
  function_des_schema_of_csv: "Returns the schema of a CSV string in DDL format.",
  function_des_to_csv: "Returns a CSV string with the specified struct value.",
  function_des_from_json: "Returns a struct value with the jsonStr and schema.",
  function_des_get_json_object: "Extracts a JSON object from path.",
  function_des_json_array_length: "Returns the number of elements in the outermost JSON array.",
  function_des_json_object_keys: "Returns all the keys of the outermost JSON object as an array.",
  function_des_json_tuple: "Returns multiple JSON objects as a tuple.",
  function_des_schema_of_json: "Returns the schema of a JSON string in DDL format.",
  function_des_to_json: "Returns a JSON string with the struct specified in expr.",
  function_des_xpath: "Returns values within the nodes of xml that match xpath.",
  function_des_xpath_boolean: "Returns true if the xpath expression evaluates to true, or if a matching node in xml is found.",
  function_des_xpath_double: "Returns a DOUBLE value from an XML document.",
  function_des_xpath_float: "Returns a FLOAT value from an XML document.",
  function_des_xpath_int: "Returns a INTEGER value from an XML document.",
  function_des_xpath_long: "Returns a BIGINT value from an XML document.",
  function_des_xpath_number: "Returns a DOUBLE value from an XML document.",
  function_des_xpath_short: "Returns a SHORT value from an XML document.",
  function_des_xpath_string: "Returns the contents of the first XML node that matches the XPath expression.",
  function_des_assert_true: "Returns an error if expr is not true.",
  function_des_case: "Returns resN for the first optN that equals expr or def if none matches.",
  function_des_coalesce: "Returns the first non-null argument.",
  function_des_cube: "Creates a multi-dimensional cube using the specified expression columns.",
  function_des_current_catalog: "Returns the current catalog.",
  function_des_current_database: "Returns the current database.",
  function_des_current_schema: "Returns the current schema.",
  function_des_current_user: "User name of current execution context.",
  function_des_elt: "Returns the nth expression.",
  function_des_equal_null: "Returns same result as the EQUAL(=) operator for non-null operands, but returns true if both are null, false if one of the them is null.",
  function_des_greatest: "Returns the largest value of all arguments, skipping null values.",
  function_des_grouping: "Indicates whether a specified column in a GROUP BY is aggregated or not.",
  function_des_grouping_id: "Returns the level of grouping.",
  function_des_hash: "Returns a hashed value of the arguments.",
  function_des_if: "Returns expr1 if cond is true, or expr2 otherwise.",
  function_des_ifnull: "Returns expr2 if expr1 is NULL, or expr1 otherwise.",
  function_des_input_file_block_length: "Returns the length in bytes of the block being read.",
  function_des_input_file_block_start: "Returns the start offset in bytes of the block being read.",
  function_des_input_file_name: "Returns the name of the file being read, or empty string if not available.",
  function_des_isnotnull: "Returns true if expr is not NULL.",
  function_des_isnull: "Returns true if expr is NULL.",
  function_des_java_method: "Calls a method with reflection.",
  function_des_least: "Returns the smallest value of all arguments, skipping null values.",
  function_des_monotonically_increasing_id: "Returns monotonically increasing 64-bit integers.",
  function_des_nullif: "Returns NULL if expr1 equals expr2, or expr1 otherwise.",
  function_des_nvl: "Returns expr2 if expr1 is NULL, or expr1 otherwise.",
  function_des_nvl2: "Returns expr2 if expr1 is not NULL, or expr3 otherwise.",
  function_des_raise_error: "Throws an exception with expr.",
  function_des_reflect: "Calls a method with reflection.",
  function_des_stack: "Separates expr1, ..., exprN into numRows rows.",
  function_des_spark_partition_id: "Returns the current partition id.",
  function_des_typeof: "Return a DDL-formatted type string for the data type of expr.",
  function_des_user: "user name of current execution context.",
  function_des_uuid: "Returns an universally unique identifier (UUID) string.",
  function_des_version: "Returns the Apache Spark version.",
  function_des_when: "When expr1 = true, returns expr2; else when expr3 = true, returns expr4; else returns expr5",
  function_des_xxhash64: "Returns a 64-bit hashed value of the arguments. Note: When using this function, precision may be lost due to the result exceeding the maximum value of the numeric types in JavaScript, resulting in inconsistency between the preview result and the actual result."
};

export default en_US;
