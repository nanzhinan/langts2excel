const zh_CN = {
  /** dis-A */
  account: '账户',
  add_data_source: '添加数据源',
  add_group_first: '请先从数据集页面添加分组。',
  add_organization: '添加组织',
  add_source_first: '请先从数据源页面添加数据源.',
  add_tasks_desc: '从左侧菜单中添加或选择数据集。',
  add_task: '添加任务',
  add_udf_function: '添加 UDF',
  add_udaf_function: '添加 UDAF',
  add_user_dis: '添加用戶',
  add_child_group: '新增子分组',
  another_name: '别名',
  assign_task: '任务状态',
  add_dataset: '添加数据集',
  about: '关于',
  add_new_task: '添加任务',
  access: '权限',
  auth_database: '身份验证数据库',
  add_job: '添加作业',
  add_task_limit_desc: '最多只能添加十个任务',
  all_setting_will_be_changed: '与该数据集相关的所有设置都将被更改。',
  application_list: '应用列表',
  application_name: '应用名称',
  as_least_one_app: '至少需要保留一个应用。',
  aggregate: '聚合',
  alter_columns: '修改栏位',
  add_columns: '添加栏位',
  and: '与',
  /** dis-B */
  basic: '基本信息',
  basic_only: '基本信息',
  basicPassword: 'Basic password',
  basicUser: 'Basic username',
  business_intelligence: '商业智能',
  boundary_time_tips: '递增字段的起始时间。若留空，则系统会自动获取字段的最近的时间作为起始时间。',
  boundary_integer_tips: '递增字段的起始值。若留空，则系统会自动获取字段的最大值作为起始值。',
  blank_table: '空白表',
  bigDataStorage: '大数据存储',
  batch: 'Batch',
  batch_selection_cannot_edit_dataset: '批量选择模式下无法编辑数据集。',
  /** dis-C */
  charset: '字符集',
  create_group_limit: '分组只能建立到第三层。',
  cdc: 'CDC',
  create_new: '新建',
  // click_add: '单击上面的“+”以添加{name}。',
  click_add: '单击“+”以添加{name}。',
  click_add_select_dataset: '从左侧菜单中选择要预览的数据。',
  click_select_data_source: '从左侧菜单中选择要预览的数据。',
  click_select_function: '从左侧面板中选择一个函数。',
  click_add_group: '请先点击上面的“+”添加分组。',
  click_join_org: '请按上面的“+”将用戶加入组织。',
  configuration_management: '配置管理',
  completion_time: '完成时间',
  collection: 'Collection',
  custom: '自定义',
  cron_expression: 'Cron 表达式',
  cron_expression_custom: '自定义 Cron 表达式',
  cron_expression_desc: 'Cron 表达式由五个子表达式组成，每个子表达式可填入以下数值。',
  cron_expression_example: 'Cron 表达式示例',
  create_new_dataset: '创建新数据集',
  create_revision: 'create_revision',
  custom_schema: '自定义模式',
  custom_schema_max_length: '不得超过63个字符。',
  custom_schema_col_name: '栏位名称',
  custom_schema_data_type: '数据类型',
  column: '栏位',
  columns: '栏位',
  column_sort: '排序栏位',
  column_set: '栏位设定',
  column_name: '栏位名称',
  columns_list: '栏位列表',
  change: '修改',
  change_password: '修改密码',
  physical_table: '物理表',
  physical_table_tooltips: '用来储存从数据来源提取的数据，可以自定义查询的 SQL 语句。',
  click_edit_to_modify: '点击编辑按钮以更改此参数值。',
  custom_partition: '自定义分区',
  copy_new_dataset: '复制数据集',
  // column_name_repeat: '列名{val}已重复',
  column_name_repeat: '栏位名称不能重复',
  column_setting_name_repeat: '栏位设定不能重复',
  index_name_repeat: 'Index 名称不能重复',
  compare_s_t_and_e_t_error: '结束时间不能早于开始时间',
  confirm: '确认',
  click_lock_make_change: '点击锁图示进行更改。',
  click_lock_save_change: '点击锁图示以保存更改。',
  copy_to_clipboard: '已复制到剪贴板。',
  combine: '合并',
  custom_table: '自定义表',
  custom_table_tooltips: '用来储存透过数据填报功能或 INSERT 语句写入的数据，可以自定义数据集的 Schema。也可储存从数据来源提取的数据。',
  column_data_type_error: '以下单元格的值与栏位数据类型不符：{val}',
  cell_data_type_error: '单元格的值与栏位数据类型不符。',
  current_version: '当前版本',
  /** dis-D */
  database_name: '数据库名称',
  database_dis: '数据库',
  database_tips: '对应于数据存储体的数据库名称。',
  dataset: '数据集',
  datasets: '数据集',
  dataset_alias: '数据集别名',
  data_preview: '数据预览',
  data_detect: '数据检测',
  dataset_preview: '数据集预览',
  dataset_lower: '数据集',
  dataset_column: '数据集栏位名称',
  dataset_group: '分组',
  dataset_list: '数据集列表',
  data_source_btn: '数据源',
  data_insight_sign_out: '退出登录',
  data_integration: '数据集成',
  data_sets: '数据集',
  data_source_alias: '数据源别名',
  data_source_disconnected: '无法连接数据源。',
  data_source_name: '数据源名称',
  data_source_lower: '数据源',
  data_sources: '数据源',
  data_sources_list: '数据源列表',
  data_sources_overview: '数据源总览',
  data_source_config: '配置数据源',
  data_source_type: '数据源类型',
  date_time: '日期时间',
  date_type: '数据类型',
  data_virtualization: 'Data Integration Service (DIS)',
  dataset_name: '数据集名称',
  dataset_running_tooltip: '数据集正在创建中，请稍候。{val1}您会于数据集创建完成后收到通知。',
  dataset_fail_tooltip: '数据集创建失败，可将此数据集进行删除，或重新尝试创建。',
  destination: '位置',
  dis_function: '方法',
  dis_required: '必填',
  dis_host: '地址',
  dis_port: '通信端口',
  dis_user_name: '用户名（邮箱）',
  dis_enable: '启用',
  dis_disable: '停用',
  dis_header: '指定第一行作为表头',
  dis_header_label: '表头',
  dis_sep: '分隔字符',
  dis_quote: '引用字符',
  dis_header_desc: '第一行作为栏位名称。',
  dis_quote_desc: '用于设定内容的转义字符，这必须是一个单字节字符。让分隔字符也可以是值的一部分。',
  dis_service_name: '服务名称',
  dis_not_dataset_text_regexp: '不能包含 dataset/datasets，无论大小写。',
  dis_first_byte_not_num_underline_regexp: '不能以数字或下划线(_)开头。',
  dis_dataset_name_regexp: '只允许 a-z、A-Z、0-9 和 _。',
  dis_data_source_name_regexp: '只允许 a-z、A-Z、0-9 和 _。',
  dis_group_name: '分组名称',
  dis_dataset_name: '数据集名称',
  dis_start_time: '开始时间',
  dis_end_time: '结束时间',
  dis_minutes: '分',
  dis_hours: '时',
  dis_days: '日',
  dis_minute: '分',
  dis_hour: '时',
  dis_month: '月',
  dis_select_all: '选择全部',
  dis_enabled: '启用中',
  dis_examples: '范例',
  dis_info: '信息',
  dis_json: '不合法的 JSON 字符串。',
  dis_advanced_setting: '高级设置',
  dis_version: '版本',
  dis_task_cron_example_every_minute: '每一分钟。',
  dis_task_cron_example_every_hour: '每小时5分。',
  dis_task_cron_example_every_day: '每天上午10:15。',
  dis_task_cron_example_only_monday: '每个星期一下午14:00。',
  dis_task_cron_example_every_Nov: '每年11月11日上午11:11。',
  dis_every_times: '每 {frequency} {interval}',
  dis_data: '数据',
  dis_number: '数值',
  dis_date_time: '日期与时间',
  dis_creating: '创建中…',
  dis_loading: '加载中…',
  dis_row: '行',
  dis_action_success: '{action}成功！',
  dis_url: 'URL',
  dis_method: 'Method',
  dis_search_root_group: '分组名称（仅限根目录中的分组）',
  datasets_destination: '保存位置',
  dis_user: '用户名称',
  disable_job: '停用作业',
  day_of_month: '日',
  day_of_week: '周',
  disconnected: '数据源已断开连接。',
  dis_select: '- 请选择 -',
  dis_input: '- 请输入 -',
  dis_sure_to_save_dataset: '数据集将使用新设定重新建立，且已有的数据会被清空。确定要保存此修改吗？',
  dis_minute_desc: '* (0 - 59)',
  dis_hour_desc: '* (0 - 23)',
  dis_day_of_month_desc: '* (1 - 31)',
  dis_month_desc: '* (Jan - Dec)',
  dis_day_of_week_desc: '* (Mon - Sun)',
  dis_time_period: '时间间隔',
  dis_cron_expression_desc: 'Cron 表达式由五个子表达式组成，每个子表达式可填入以下数值。',
  dataset_create_success: '数据集创建完成',
  dataset_create_fail: '数据集创建{value}',
  dataset_create_processing: '数据集创建中',
  dataset_edit_success: '数据集编辑完成',
  dataset_edit_fail: '数据集编辑{value}',
  dataset_edit_processing: '数据集编辑中',
  dataset_create_success_msg: `数据集 {value} 创建完成。`,
  dataset_create_fail_msg: `数据集 {value} 创建失败。`,
  dataset_create_processing_msg: `数据集 {value} 正在创建中。`,
  dataset_edit_success_msg: `数据集 {value} 已编辑完成。`,
  dataset_edit_fail_msg: `数据集 {value} 编辑失败。`,
  dataset_edit_processing_msg: `数据集 {value} 正在编辑中。`,
  dataset_insert_success: '数据插入完成',
  dataset_insert_fail: '数据插入{value}',
  dataset_insert_processing: '数据插入中',
  dataset_insert_success_msg: `数据集 {value} 数据插入已完成。`,
  dataset_insert_fail_msg: `数据集 {value} 数据插入失败。`,
  dataset_insert_processing_msg: `数据集 {value} 数据正在插入中。`,
  dataset_insert_tips: '数据正在插入中，请稍候。您会于数据插入完成后收到通知。',
  dis_on: '启用',
  dis_off: '停用',
  dis_on_or_off: '启用／停用',
  dashboard: '可视化大屏',
  drop_file_to_upload: '将文件拖拽到此处，或{value}并上传文件。',
  drop_file_here: '请将文件拖拽到此处',
  dis_upload_file: '上传文件',
  dis_failed: '失败',
  dis_length_error: '仅限正整数',
  dis_blank_table_length_required: '数据类型为 DECIMAL 时长度为必填项',
  dis_column_name_rules: '列名必须为 [a-zA-Z0-9_]，且不能以数字或“_”开头。',
  dis_at_least_one_column: '至少要有一个自定义模式或自定义分区。',
  dis_dataset_name_rule: '仅允许 [a-zA-Z0-9_] 且不能以数字或“_”开头',
  datasource_access: '数据源权限',
  dataset_access: '数据集权限',
  datasource_name: '数据源名称',
  dis_source_id: '数据源ID',
  dis_dataset_id: '数据集ID',
  dis_source_name: '数据源名称',
  dis_created_by: '创建者',
  dis_created_at: '创建时间',
  dis_updated_by: '更新者',
  dis_updated_at: '更新时间',
  dis_none: '无',
  dis_apply: '应用',
  dis_clear_all: '清空',
  dis_time_filter: '时间筛选',
  dis_time_range: '时间范围',
  dis_last_seven_days: '过去 7 天',
  dis_from_to: '自定义时间范围',
  detail: '详细信息',
  dis_start_date: '开始日期',
  dis_end_date: '结束日期',
  dis_cdc: 'CDC',
  dis_primary_key: '主键',
  dis_incremental_update_tips: '在执行增量更新任务之前，请先进行增量更新设置。',
  default_database: '数据库',
  default_database_tips: '要从中读取数据的数据库名称。如果与身份验证数据库相同，则将此字段留空。',
  dis_type: '类型',
  dis_inferSchema: '自动推断 Schema',
  dis_inferSchema_desc: '从数据中自动推断 schema。',
  dis_application: '应用',
  dis_close: '关闭',
  development_mode: '开发模式',
  data_assets: '数据资产',
  double_click_or_drag_tips: '双击或者以拖拽的方式将 {name} 加入到SQL中。',
  drag_tips_only: '以拖拽的方式将 {name} 加入到SQL中。',
  dis_group_list: '分組列表',
  document_api: 'API 文档',
  data_development: '数据开发',
  duplicate: '复制',
  drag_node_to_create: '请从左侧面板拖拽节点来建立流程图。',
  dis_excludeAttribute: '排除属性',
  dis_excludeAttribute_tips: '是否要排除元素中的属性。',
  download_template_to_learn: '下载{template}可以帮助你填报数据。',
  data_input: '数据填报',
  delete_all_resources_of_group: '请先删除分组内的所有资源。',
  /** dis-E */
  edit_name: '编辑 “{name}”',
  edit_job: '编辑作业',
  edit_dataset: '编辑数据集',
  edit_data_source: '编辑数据源',
  edit_udf_function: '编辑 UDF',
  edit_udaf_function: '编辑 UDAF',
  edit_task: '编辑任务',
  enable_job: '启用作业',
  epoch: 'Epoch',
  end_by: '结束于',
  extension_functions: '扩充函数',
  execution_frequency: '执行频率',
  execution_once: '只执行一次',
  excution_time: '执行时间',
  everyday: '每天执行一次',
  every: '每',
  extension_service: '外部服务',
  extension_function_access: '扩充函数权限',
  encoding: '编码',
  error_msg: '错误信息：',
  email: '邮箱',
  end_time_setting: '结束时间设置',
  execute: '执行',
  e_t_need_later_then_s_t_error: '结束时间需晚于开始时间',
  exit_development_mode: '离开开发模式',
  excel_insert_col_before: '在左方插入一列',
  excel_insert_col_after: '在右方插入一列',
  excel_insert_row_before: '在上方插入一行',
  excel_insert_row_after: '在下方插入一行',
  excel_insert_rows_before: '在上方插入多行',
  excel_insert_rows_after: '在下方插入多行',
  excel_insert_rows_end: '插入一行',
  excel_insert_more_rows_end: '插入多行',
  excel_delete_selected_cols: '删除所选的列',
  excel_rename_column: '重命名此栏位',
  excel_order_ascending: '升序',
  excel_order_descending: '降序',
  excel_delete_selected_rows: '删除所选的行',
  excel_copy: '复制',
  excel_paste: '粘贴',
  excel_save_as: '另存为',
  /** dis-F */
  fail: '失败',
  full_update: '全量更新',
  function_alias: '函数别名',
  function_dis: '函数',
  function_lower: '函数',
  functions: '函数',
  functions_list: '函数列表',
  function_name: '函数名称',
  file_upload_row_limit: '接受的文件格式：{type}。最大上传数据笔数：{size}。',
  file_upload_format: '接受的文件格式：{type}。最大上传文件大小：{size}。',
  file_upload_fail: '此文档无法上传。请重新尝试。',
  file_uploading: '请等待文件上传完毕。',
  file_upload_success: '文件已上传成功。',
  failure_notification: '故障通知',
  fail_upload_fail_check_format: '无法上传文件，请检查文件格式是否为 {type}，然后再试一次。',
  fail_upload_fail_check_row_limit: '无法上传文件，请检查文件内数据是否超出了 10000 笔，然后再试一次。',
  fail_upload_fail_check_size: '无法上传文件，请检查文件大小是否小于等于 100 MB，然后再试一次。',
  fail_upload_fail_content: '上传文件不合法，请检查文件的格式和内容后再试一次。',
  fail_upload_fail_check_length: '系统只允许上传一个文件。',
  failure_notification_error: '获取通知群组失败。请配置正确的 NOTIFICATION_URL 参数，且用户需要有WISE-IoTSuite/Notification 的使用权限。',
  failure_notification_no_exist: '指定的通知群组不存在，请选择其他的群组。',
  failure_notification_no_permission: '获取通知群组失败，请配置正确的 NOTIFICATION_URL 参数，且用户需要有 WISE-IoTSuite/Notification 的使用权限。',
  failure_notification_not_found: '找不到通知群组。至少要有一个通知群组建立于 WISE-IoTSuite/Notification。',
  full_access: '全部权限',
  finish: '已完成',
  function_name_or_alias: '函数名称或别名',
  filter_row: '行过滤',
  filter: '过滤',
  filter_setting: '过滤设置',
  /** dis-G */
  general: '普通',
  group_repeat: '指定的分组下已经存在相同名称的分组。',
  graphic_flow: '图形化流程',
  group_by: '分组',
  /** dis-H */
  host_role: '此字段的格式为{tag1}host{tag2}:{tag1}port{tag2}，若有多组，每组请以逗号(,)分隔',
  home_lower: '首页',
  /** dis-I */
  import: '导入',
  import_data: '导入数据',
  information: '信息',
  instanceName: '实例名称',
  item: '列',
  incremental_update_now: '增量更新设置',
  input_regexp_1: '仅允许 [a-zA-Z0-9.-]',
  input_regexp_2: '. 和 - 不允许出现在开头与结尾',
  input_regexp_3: '仅允许数字',
  input_regexp_4: '仅允许 [0-9a-f-]',
  input_regexp_5: '仅允许 [a-zA-Z0-9:-.,]',
  input_regexp_6: '仅允许 [a-z0-9.-]',
  input_regexp_7: '仅允许 [a-zA-Z0-9._-] 和空格',
  input_regexp_8: '仅允许 [a-zA-Z0-9._-]',
  input_regexp_9: '不允许空格',
  input_regexp_10: '仅允许 [a-zA-Z0-9_-.+]',
  input_regexp_11: '仅允许 [a-zA-Z0-9_-./@:]',
  input_regexp_12: '此名称为保留名称，请使用其他名称。',
  input_regexp_13: '不合法的名称，请使用其他名称。',
  input_regexp_14: '仅允许 [a-zA-Z0-9.-]且必须以小写字母开头。',
  input_regexp_15: '仅允许数字和小数点，且小数点不允许出现在开头和结尾',
  input_regexp_16: '仅允许 [a-z0-9_-.]',
  input_regexp_17: '仅允许正整数和-1',
  input_regexp_18: '仅允许正数和-1',
  input_regexp_19: '空格不允许出现在开头与结尾',
  input_regexp_20: '仅允许 [a-zA-Z0-9_]且不能以数字开头',
  input_regexp_21: '此字段必须为正整数，且介于 {min} 到 {max} 之间。',
  input_regexp_22: '不得超过 {length} 个字符。',
  input_regexp_23: '格式不正确',
  input_regexp_24: '仅允许 [a-z0-9_]，且不能以数字开头。',
  input_regexp_25: '仅允许字母和数字。',
  input_regexp_26: '仅允许 [a-zA-Z0-9_]',
  input_regexp_27: '此字段必须为整数，且介于 {min} 到 {max} 之间。',
  input_regexp_28: '仅允许 [a-z0-9_]，且只能以小写英文字母开头。',
  input_regexp_int: '此字段必须为整数。',
  input_regexp_int_min: '此字段必须为整数, 且最小值为 {min}。',
  input_regexp_decimal: '两个数字必须为介于0到38之间的正整数，且第一个数字必须大于或等于第二个数字。',
  input_regexp_no_comma: '此栏位不允许出现","',
  input_regexp_no_double_quotes: '此栏位不允许出现双引号',
  input_regexp_min_count: '最小值为 {minCount}。',
  input: '输入',
  input_insert_row_counts: '请输入需要插入的行数。',
  insert_row_count_s: '插入行数',
  insert_row_success: '插入成功！',
  /** dis-J */
  job_management: '作业管理',
  job_id: '作业ID',
  job_name: '作业名称',
  job_mgmt_lowercase: '作业管理',
  jump_to_job_mgmt: '前往{name}创建任务。',
  jobs_lower: '作业',
  jobs: '作业',
  jump_to_application_mgmt: '前往{name}创建应用。',
  joint_data: '关联数据',
  /** dis-L */
  lease: 'lease',
  less: '较少',
  last_execution_time: '最后执行时间',
  last_completion_time: '最后完成时间',
  last_version: '最后版本',
  /** dis-M */
  marks_title: '“{val}”',
  mark_all_as_read: '全部标为已读',
  mark_as_read: '标为已读',
  measurement: 'Measurement',
  message: '信息',
  move_dataset_to_new_group: '从下面的列表中选择一个分组',
  move_to: '移动至…',
  move_to_short: '移动至',
  move_to_root: '移动至根目录',
  move: '移动',
  manage_application: '管理应用',
  manage_applications: '管理应用',
  manage_applicaiton_config: '为数据集设定应用。',
  more: '更多',
  more_detail: '详细信息',
  mine_datasets: '我的数据集',
  /** dis-N */
  no_application: '尚未有应用。',
  no_data_yet: '还没有数据。',
  no_dataset: '未选择任何数据集。',
  no_dataset_preparing: '没有正在创建的数据集',
  no_data_selected: '未选择任何数据。',
  no_data_source_selected: '尚未选择数据源。',
  no_function_selected: '未选择任何函数。',
  no_job_selected: '未选择任何作业。',
  no_data_group: '还没有分组。',
  no_data_sources: '还没有数据源。',
  no_group_to_select: '没有可选择的分组。',
  no_dataset_to_select: '没有可选择的数据集。',
  no_source_to_select: '没有可选择的数据源。',
  no_status: '无状态',
  no_join_org: '尚未加入组织',
  no_permission: '授权验证失败',
  no_permission_page: '请回到{home}再试一次。如果再次发生这种情况，请与我们联系。',
  no_task: '尚未选择任何任务。',
  no_task_update_strategy: '尚未有任何任务。',
  no_end_time: '无结束时间',
  next_execution: '下一次执行时间',
  no_user: '尚未加入任何用户。',
  notification_alarm: '告警通知',
  num_item: '{num} 项',
  num_item_selected: '已选择 {num} 项：',
  num_users: '{num} 个用户',
  num_teams: '{num} 个团队',
  num_roles: '{num} 个角色',
  num_datasets: '{num} 个数据集',
  not_selected_no_need_fill_in: '尚未选中，不需要填入。',
  num_organization: '{num} 个组织',
  number_of_entries: '更新数量',
  noSQL: 'NoSQL 数据库',
  no_group: '未选择任何分组。',
  notification_group: '通知群组',
  no_matching_column: '在数据集中找不到符合该参数类型的栏位。',
  'No.': '编号',
  no_extension_function: '没有可选择的扩充函数。',
  new_dataset: '新数据集',
  no_node: '还没有节点',
  no_columns: '还没有栏位',
  no_columns_add_new: '点击 “ {btn} ” 按钮添加栏位！',
  no_columns_drag_new: '请推拽栏位到此处。',
  no_rules: '还没有过滤规则',
  no_rules_add_new: '点击 “ {btn} ” 按钮添加规则！',
  /** dis-O */
  oauthToken: 'OAuth token',
  organization_dis: '组织',
  organization_dis_lower: '组织',
  organizations_dis: '组织',
  organization_name_dis: '组织名称',
  organization_list: '组织名称',
  organized_by_groups: '数据集从属于分组。',
  organized_by_groups_for_function: '函数将存放在分组之下。',
  organizations_number: '组织数',
  org_user: '组织用户',
  organization_setting: '组织设置',
  org_user_list: '组织用户列表',
  or: '或',
  /** dis-P */
  page: '页',
  prev_revision: 'prev_revision',
  previewVariables: 'Preview variables',
  preview_timeout_try_again: '预览超时，请重试',
  previewVariables_tooltip: 'Raw request body 中的变数。例如：变数 {val1} 的键请填 {val2}。',
  progress_header: '{value} 个数据集正在处理中',
  properties: '属性',
  partition: 'Partition',
  profile: '个人信息',
  p_i_pwd: '请输入您的密码。',
  pipeline_tips: '在将资料发送到 Spark 之前将自定义聚合管道应用于 Collection，例如：{val}',
  pending: '待执行',
  publish: '发布',
  publish_api: '发布 API',
  /** dis-Q */
  query_stopped: '查询已停止',
  /** dis-R */
  return_to: '返回',
  redo: '重试',
  reqBody: 'Request body',
  request_threads: '请求线程数量',
  request_threads_desc: '并发执行请求的线程数。',
  relational: '关系型数据库',
  regexp_dis_task_increment_integer_and_zero: '仅允许正整数和零',
  rawReqBody: 'Raw request body',
  rowTag: 'Row tag',
  read_timeout: '读取超时时间 (ms)',
  request_timeout_try_again: '请求超时，请重试',
  retention_policy: '数据保留策略',
  retry_interval: '重试间隔时间 (ms)',
  retry_interval_desc: '重试间隔时间。如果响应的 HTTP 状态码不是 20X，系统会重试。',
  retry_times: '重试次数',
  retry_times_desc: '重试次数。如果响应的 HTTP 状态码不是 20X，系统会重试。',
  row_per_page: '每页行数',
  rawReqBody_tooltip: '在全量或增量更新时，可以透过变量替换 Raw request body 的内容。变量请用 {val1} 打包，例如：{val2}。',
  require_should_not_blank: '必填字段不能为空。',
  reference: '参考来源',
  remove_duplicates: '去除重复',
  rule: '规则',
  rule_list: '规则列表',
  /** dis-S */
  save_exit: '保存并退出',
  save_dataset: '保存数据集',
  save_return_develop: '保存并返回数据开发',
  same_name_error: '已存在相同名称的{name}。',
  same_name_error_use_an: '已存在相同名称的{name}。',
  same_dataset_name: '已存在相同名称的数据集。',
  same_group_name: '已存在相同名称的分组。',
  same_source_name: '已存在相同名称的数据源。',
  same_task_name: '已存在相同名称的任务。',
  same_func_name: '已存在相同名称的函数。',
  same_org_name: '已存在相同名称的组织。',
  same_application_name_error_use_an: '已存在相同名称的应用。',
  save_as: '另存为',
  save_new_dataset: '另存为新数据集',
  save_new_dataset_name_where: '设置数据集名称及其保存位置',
  save_new_udf: '另存为新方法',
  save_new_name_where: '设置{name}名称及其保存位置',
  schema: '模式',
  schema_information: '模式详情',
  select_data_source: '选择数据源类型',
  select_database_connect: '选择要添加的数据源类型',
  select_org: '请选择组织',
  select_user: '请选择用戶',
  semiStructured: '结构化文档',
  sure_to_stop_processing_datasets: '您确定要停止处理这些数据集吗？',
  soapVersion: 'SOAP version',
  show_table_rows: '最多可预览 {value} 行数据。',
  show_table_rows_log: '最多可查看 {value} 行日志。',
  show_table_rows_query: '最多可预览 {value} 行数据。',
  socket_timeout: 'Socket 超时时间 (ms)',
  srp_frame: '应用框架',
  sure_to_save_dataset: '确定要保存数据集吗？数据集的内容将会被替换成当前的查询结果。',
  sure_to_delete_name: '确定要删除此{name}吗？所有设定都会被删除。',
  sure_to_delete_group: '确定要删除此分组吗？',
  group_can_not_delete: '当分组下没有资料时才能被删除。',
  role_can_not_delete: '只有当此角色没有被分配给任何用户时才能被删除。',
  sure_to_delete_dataset: '确定要删除此数据集吗？',
  sure_to_delete_datasets: '确定要删除已选择的数据集吗？',
  sure_to_delete_job: '确定要删除此作业吗？相关的更新日志也会一并被删除。',
  sure_to_delete_function: '确定要删除此函数吗？',
  sure_to_disable_name: '您确定要停用“{name}”吗？',
  sure_to_enable_name: '确定要启用“{name}”吗？',
  sure_to_delete_org: '确定要删除此组织吗？所有设置都会被删除。',
  sure_to_delete_driver: '确定要删除此驱动吗？删除驱动后，建议重新启动 DataInsight，以防止系统出现异常。',
  sure_to_delete_user: '确定要删除此用户吗？',
  sure_to_delete_orgs: '确定要删除已选择的组织吗？所有设置都会被删除。',
  sure_to_delete_drivers: '确定要删除已选择的驱动吗？删除驱动后，建议重新启动 DataInsight，以防止系统出现异常。',
  sure_to_delete_users: '确定要删除已选择的用户吗？',
  sure_to_delete_roles: '确定要删除已选择的角色吗？',
  sure_to_delete_teams: '确定要删除已选择的团队吗？',
  sure_to_delete_application: '确定要删除此应用吗？',
  application_can_not_delete: '当应用下没有资料时才能被删除。',
  sure_to_delete_node: '确定要删除此节点吗？',
  sure_to_delete_nodes: '确定要删除已选择的节点吗？',
  sure_to_delete_selected_data: '确定要删除已选择的资源吗？',
  sure_to_exit_development_mode: '确定要离开开发模式吗？尚未保存的查询将会丢失。',
  sure_to_create_new_one: '确定要新建吗？所有设置都不会被保存。',
  sure_save_dataset: '确定要保存这个数据集吗？',
  stop_other_tasks: '其他启用中的任务将会被停用。',
  switch_org_subTitle: '当前组织：{orgName}。请选择要切换的组织。',
  switch_org: '切换组织',
  system_admin_dis: '系统管理员',
  system_settings: '系统设置',
  s3_only: '仅限本地 S3',
  select_data: '选择数据',
  set_dataset_name: '设置数据集名称',
  set_where_it_is_saved_to: '设置保存位置。',
  select_destination: '选择位置',
  select_folder_to_move: '请选择一个分组来完成移动。',
  set_dataset: '设置数据集',
  schema_setting: '模式设置',
  sign_in_sub: '登录到 WISE-IoTSuite/DataInsight',
  set_task: '设定任务',
  status: '状态',
  select_data_sources: '选择数据源',
  sample_size: '样本大小',
  sample_size_tips: 'DataInsight 会从数据源获取指定的数据量作为样本池，再从样本池中采样指定的数据量用来分析数据表的模式。样本大小为从样本池采样的数据量。',
  sample_pool_size: '样本池大小',
  sample_pool_size_tips: 'DataInsight 会从数据源获取指定的数据量作为样本池，再从样本池中采样指定的数据量用来分析数据表的模式。样本池大小为从数据源获取的数据量。',
  set_job: '设置作业',
  select_table_type: '选择表格类型',
  sql: 'SQL',
  sort: '排序',
  sure_clear_all_sheet: '确定要清空所有填报数据吗？',
  sure_clear_all_query_data_sheet: '点击确定按钮后会从数据集删除目前显示的 {length} 笔数据，确定要删除吗？',
  /** dis-T */
  Table: '数据表',
  task: '任务',
  task_list: '任务列表',
  task_name: '任务名称',
  task_status: '任务状态',
  task_setting: '任务设置',
  technical_document_info: '点击任何一个函数后，此处会显示编写说明。',
  team: '团队',
  teams: '团队',
  team_list: '团队列表',
  team_name: '团队名称',
  timeSeries: '时序型数据库',
  total_data: '数据总数',
  table_type: '表格类型',
  tool: '工具',
  table_not_empty: '填报数据不能为空。',
  /** dis-U */
  update_log: '更新日志',
  update_strategy: '更新策略',
  update_setting: '更新设置',
  update_type: '更新方式',
  update_now: '立即执行',
  update_in_progress: '立即更新进行中。',
  update_type_tips: '全量更新：更新时会重新获取 SQL 语句指定的数据，并重建整个数据集。',
  // update_type_tips: '全量更新：更新时会重新获取SQL语句指定的数据，并重建整个数据集。 \n增量更新：只更新上次更新之后新增的部分，不影响原始数据集中的数据。',
  user_lower: '用户',
  user_list: '用户列表',
  user_name_email: '用户名（邮箱）',
  uploading: '上传中',
  /** dis-V */
  variable_reference_column: '变量参考栏位',
  variable_reference_column_desc: '用来取代 Raw request body 中的变量。',
  variable_reference_table: '变量参考表',
  variable_reference_table_desc: '这个表格的栏位用来取代 Raw request body 中的变量，若搭配增量更新使用，表格中的每一行资料都是独立的一次 HTTP 请求，所有请求的返回结果都会被储存下来。',
  visulization: '可视化多维分析',
  visualization_analysis: '可视化分析',
  v_group: '分组',
  v_dataset: '数据集',
  view_sql: '查看 SQL',
  view_table: '视图表',
  view_table_tooltips: '用来直接查询数据来源的数据，本身不储存任何数据。',
  view_table_disabled_tooltips: '由于 SQL 涉及数据集，所以支持储存成视图表。',
  view_current_version: '查看当前版本',
  /** dis-X */
  xsdContent: 'XSD content',
  /** dis-iFactory-menu */
  connector: '数据源管理',
  data_setting: '数据设置',
  data_retrieval: '数据治理',
  data_analysis: '数据分析',
  iFactory_data_fabric: '智慧工厂数据编织',
  general_fun: '通用功能',
  organizer: '组织数据',

  /** Parameters */
  preview_row_limit_tips: '数据预览的行数限制。',
  parameter_name: '参数名称',
  parameter_value: '参数值',
  parameter_setting: '参数设置',
  api_limitation: 'API 限制',
  api_url_tips: 'DataInsight API 的公开 URL。',
  internal_parameters: '内部参数',
  internal_jdbc_endpoint_tips: 'JDBC 接口的私有 endpoint。{val1} 和 {val2} 是您的 SSO 用户名和密码。',
  external_jdbc_endpoint_tips: 'JDBC 接口的公开 endpoint。{val1} 和 {val2} 是您的 SSO 用户名和密码，而 {val3} 是 JDBC 接口的公开 IP。',
  service_plan_tips: '服务方案。',
  srpframe_url_tips: 'WISE-IoTSuite/SRPFrame 的 URL 设定。',
  twin_space_enabled_tips: '与 Desk 服务整合。',
  query_row_limit_tips: '数据查询的行数限制。',
  notification_url_tips: 'WISE-IoTSuite/Notification 的 URL 设定。',
  log_row_limit_tips: '更新日志的行数显示限制。',
  dashboard_url_tips: 'WISE-IoTSuite/Dashboard 的 URL 设定。',
  bi_url_tips: 'WISE-IoTSuite/BI 的 URL 设定。',
  allowed_client_token_service_whitelist_tips: '允许使用 Client Token 调用 DataInsight API 的服务名称白名单。 (允许多个服务的话使用 ; 作为分隔符号)',
  license_expiration_time: '授权到期时间。',
  sql_history_records: 'SQL 历史记录',
  retention_policy_days: 'SQL 历史记录保留天数。',
  vacuum_start_time: '每天删除 SQL 历史记录的开始时间。',
  execution_time_second_threshold: '若 SQL 执行时间 (秒) 大于此阀值，此 SQL 才会被记录下来。0 代表所有的 SQL 都会被记录。',

  /** Org role */
  system_default_role_cannot_modified: '此为系统默认角色，不允许被修改。',
  resource_permissions: '资源权限',
  createSource: '新建数据源',
  createDataset: '新建数据集',
  userManagement: '管理用户',
  roleManagement: '管理角色',
  teamManagement: '管理团队',
  role_list: '角色列表',
  applications_groups_datasets: '应用/分组/数据集',
  dataset_action_view_permission_lang: '查看应用/分组/数据集',
  dataset_action_manage_permission_lang: '添加、编辑、删除应用/分组/数据集',
  source_action_view_permission_lang: '查看数据源',
  source_action_manage_permission_lang: '添加、编辑、删除数据源',
  groups_extension_functions: '分组/扩充函数',
  udf_action_view_permission_lang: '查看分组/扩充函数',
  udf_action_manage_permission_lang: '添加、编辑、删除分组/扩充函数',
  user_action_manage_permission_lang: '添加、编辑、删除用户',
  role_action_manage_permission_lang: '添加、编辑、删除角色',
  team_action_manage_permission_lang: '添加、编辑、删除团队',
  add_edit_delete: '添加、编辑、删除',

  /** Org team */
  team_lower: '团队',
  team_add: '添加团队',
  team_members: '团队成员',
  members: '成员数',
  no_add_members: '还没有成员',
  click_add_member: '请按上面的“+”将成员加入团队。',
  member_list: '成员列表',

  /** Change password */
  old_new_password_can_not_same: '新密码和旧密码不能相同',
  new_password_no_same: '与新密码不一致',
  password_not_comply_rules: '密码不符合规则',
  password_rules: '密码规则',
  password_rules_info_1: '至少8个字符，最多20个字符',
  password_rules_info_2: '至少1个数字',
  password_rules_info_3: '至少1个小写字母',
  password_rules_info_4: '至少1个大写字母',
  password_rules_info_5: '至少1个特殊字符',
  password_rules_info_6: '不包含空格（），反斜杠（\\）和引号（“）',
  password_rules_info_7: '不能与最后三次使用过的密码相同',

  /** Dataset sort */
  click_sort_asc: '点击升序',
  click_sort_desc: '点击降序',
  index: '索引',
  index_name: '索引名称',
  index_setting: '索引设置',
  order_by: '排序',
  data_freshness_policy: '数据新鲜度策略',
  query_cache: '查询缓存',
  query_cache_tips: '是否要启用查询缓存。当查询到此数据集的数据时，会建立一个有存活时间（TTL）的缓存，下次查询一样的数据时，会直接使用缓存。若查询同时涵盖多个数据集时，则缓存的存活时间（TTL）会以最小的为准。请注意，查询缓存不适用于预览。',
  time_to_live_minutes: '存活时间（分钟）',

  /** Login page */
  email_address: '用户名',
  username_email: '用户名',

  /** HTTP source */
  parameters_en: 'Parameters',
  query_parameters: '查询参数',
  authorization_en: 'Authorization',
  authorization_type: '授权类型',
  access_token_url: 'Access token URL',
  request_body: 'Request body',
  content_type: 'Content type',
  "application/json": 'application/json',
  json_data_request_body: 'JSON data (Request body)',
  json_data_request_body_tips: '获取 token 的 JSON 格式的 request body 。',
  response_body: 'Response body',
  json_path_of_token_response_body: 'JSONPath of token (Response body)',
  json_path_of_token_response_body_tips: '定义从 response body 中获取 token 的 JSONPath 。',
  auto_refresh_token: '自动更新 token',
  every_hour: '每小时',
  auto_refresh_token_interval_minute: '自动更新 token 间隔（分钟）',
  headers_en: 'Headers',
  body_en: 'Body',
  key_not_repeat: '键不可重复。',
  default_variables: '默认变量',
  default_variables_tips: '变量的预设值。当有设定变量时，会作为变量的预设值用来推断 schema 。',
  bearer_token_en: 'Bearer token',
  grant_type: '授予类型',
  add_auth_data_to: '将授权数据添加到',
  header_prefix: 'Header 前缀',
  client_id: '客户端 ID',
  client_secret: '客户端密钥',
  scope: 'Scope',
  client_authorization: '客户端授权',
  'form-data_en': 'form-data',
  'x-www-form-urlencoded_en': 'x-www-form-urlencoded',
  number: '数字',
  data_type: '数据类型',
  row_json_path: 'Row JSONPath',
  row_json_path_tips: '从 Response body 中用来提取行资料的 JSONPath。',
  pagination_setting: '分页设置',
  page_type: 'Page type',
  page_field: 'Page field',
  page_field_tips: '页码或偏移量栏位名称。',
  starting_value: 'Starting value',
  start_value_tips: '页码或偏移量的起始值。',
  page_number: '页码',
  dis_offset: '偏移量',
  page_size_field: 'Page size field',
  page_size_field_tips: '每页笔数的栏位名称。',
  page_size: 'Page size',
  page_size_tips: '每页笔数。',
  total_count_json_path: 'Total count JSONPath',
  total_count_json_path_tips: 'Response body 中数据总数栏位的 JSONPath。',
  concurrent_request_threads: '请求线程数量',
  concurrent_request_threads_tips: '并发执行请求的线程数，1 代表依序执行请求。',
  auto_refresh_header_key_of_token: 'Header key of token',
  auto_refresh_header_key_of_token_tips: 'Token 的 header 名称。',
  auto_refresh_token_prefix_key: 'Header prefix of token',
  auto_refresh_token_prefix_key_tips: '会被加在 header 值中，放在 token 之前。',
  auto_infer_number: '自动推断数值类型',
  auto_infer_number_tips: '从数据中自动推断 schema 中数值的数据类型。停用时，数据类型始终为 Double。',

  /** JDBC source */
  delimited_identifier: '分隔标识符',
  delimited_identifier_tips: '分隔标识符是将标识符（例如列名称、表名称、索引名称等）括在特定的引号或字符中。这种做法允许在标识符中使用保留字、特殊字符或空格，而不会与 SQL 语法发生冲突。',

  /** SAP RFC source */
  sap_version: 'SAP 版本',
  ashost: 'ASHOST',
  ashost_tips: '特定 SAP 应用程序服务器的主机名。',
  sysnr: 'SYSNR',
  sysnr_tips: 'SAP 系统号码。',
  client_no: '客户端编号',
  client_no_tips: '三位数的 ABAP 客户端编号。定义目标 ABAP 系统的客户端。',
  rfc_table_name: 'RFC 表格名称',
  rfc_function_name: 'RFC 函数名称',
  import_parameters: '导入参数',
  default_value: '预设值',

  /** Organization export import */
  export_setting: '导出设置',
  export_all: '全部导出',
  override: '覆盖',
  override_tips: '当遇到相同名称的数据集时，决定要覆盖还是忽略。',
  export_successfully: '导出成功！',
  import_setting: '导入设置',
  place_select_import_resources: '请先选择需要导出的资源。',

  /** increment/full update */
  time_increment_interval: '时间增量间隔',
  minute_s: '分钟',
  hour_s: '小时',
  day_s: '天',
  failure_retry_strategy: '故障重试策略',
  time_interval_seconds: '时间间隔（秒）',
  condition: '条件',
  condition_type: '条件类型',
  condition_value: '条件值',
  connection_timeout: '连接超时时间 (ms)',
  dis_start_number: '起始值',
  parameter_type: '参数类型',
  immediate_update: '立即更新',
  incremental_update: '增量更新',
  incremental_update_setting: '增量更新设置',
  full_update_setting: '全量更新设置',
  preview_incremental_SQL: '预览增量更新 SQL 语句',
  preview_full_SQL: '预览全量更新 SQL 语句',
  last_n_days: 'Last N days',
  save_incremental_update_first: '请先锁定增量更新设置。',
  save_full_update_first: '请先锁定全量更新设置。',

  /** Driver management */
  driver: '驱动',
  driver_lower: '驱动',
  driver_management: '驱动管理',
  driver_list: '驱动列表',
  class_name: 'Class name',
  file_name: '文件名称',
  driver_name: '驱动名称',
  add_driver: '添加驱动',
  action: '操作',
  num_drivers: '{num} 个驱动',

  /** tenant change notification */
  current_tenant_changed: '当前租户已改变',
  current_tenant_changed_reload_page: '当前租户已改变，页面将会在 {time} 秒后重新加载。也可以点击刷新按钮重新加载此页面。',

  /** Copilot */
  enter_message: '输入文本',
  new_chat: '新建聊天',
  dis_copilot: 'DataInsight Copilot',
  sure_to_delete_chat_message: '确定要删除此条记录吗？',
  ai_first_message: '你好，我是 DataInsight Copilot，很高兴遇见你！',
  'updated:': '更新时间：',

  /** Monitoring */
  history: '历史记录',
  monitoring: '监控',
  sql_monitoring: 'SQL 监控',
  sql_analysis: 'SQL 分析',
  search_sql_statements: '搜索 SQL 语句',
  sql_slow_counts: 'SQL 慢查询总数量',
  sql_slow_counts_chart: 'SQL 慢查询趋势',
  sql_slow_time: '最慢 SQL 查询时间',
  sql_slow_time_chart: '最慢 SQL 查询趋势',
  'execution_time(sec)': '执行时间（秒）',
  start_time: '开始时间',
  end_time: '结束时间',
  start_date: '开始日期',
  end_date: '结束日期',
  sql_statements: 'SQL 语句',
  space_times: ' 次',
  times: '次',
  sec: '秒',
  space_sec: ' 秒',
  sql_query_count: 'SQL 慢查询数量',
  sql_query_time: 'SQL 查询时间',
  real_time_analysis: '实时分析',

  /** Custom dataset share */
  public_link: '公开链接',
  anyone_with_link_can: '知道链接的任何人',
  can_only_view: '只能查看',
  can_only_add_data: '只能新增数据',
  can_edit: '可以编辑',

  /** Built-in functions */
  built_in_functions: '内置函数',
  "example:": '示例：',
  "result:": '结果：',

  /** Data filling */
  filter_rows: '过滤条件',
  filter_rule_list: '规则列表',
  value1: '值1',
  value2: '值2',
  value1_not_greater_value2: '第一个值必须小于第二个值',
  no_filling_permission: '该数据集不存在或者没有被共享。',
  back_to_home: '回到{home}。',
  add_data: '新增数据',

  /** Data lineage */
  data_lineage: '数据血缘',
  table_view: '表格视图',
  column_view: '栏位视图',
  script_view: 'SQL 视图',
  split: '分割画面',

  /** Data dictionary */
  data_dictionary: '数据字典',
  data_list: '数据列表',
  schema_length: '模式 ({length})',
  dataset_path: '数据集路径',
  dataset_name_type_description: '数据集名称、类型、描述',

  /** Levels */
  data_security: '数据安全',
  security_levels: '安全等级',
  security_level: '安全等级',
  security_level_list: '安全等级列表',
  num_security_levels: '{num} 个安全等级',
  security_level_name: '安全等级名称',
  security_level_name_lower: '安全等级名称',
  sure_to_delete_level: '确定要删除此等级吗？',
  sure_to_delete_levels: '确定要删除已选择的等级吗？',
  max_level_allow: '最多只可添加 5 个等级',
  connected_dataset: '关联的数据集',

  /** Job management */
  dis_pending: '待执行',
  running: '运行中',
  finished: '已完成',
  error: '错误',
  abort: '中断',

  /** New */
  nothing: '无',
  update: '更新',
  insert_on_conflict_strategy: '插入冲突策略',
  conflict_columns: '冲突栏位',
  constraint_setting: '约束设置',
  constraint: '约束',
  constraint_name_repeat: '约束名称不能重复',
  constraint_name: '约束名称',
  constraint_type: '约束类型',
  unique_constraint: '唯一约束',
  level_info: '等级信息',
  executor: '执行者',
  no_constraint_add_first: '找不到 UNIQUE 约束类型的栏位。请先编辑数据集，在约束限制新增 UNIQUE 约束类型的栏位，再在这里进行选择。',
  task_no: '任务编号',
  sepOption_1: '逗号 (,)',
  sepOption_2: '分号 (;)',
  sepOption_3: '空格 ( )',
  sepOption_4: 'Tab 键 (\\t)',
  sepOption_5: '其他',
  other_sep: '其他分隔符',
  dis_sep_desc: '每个栏位和值的分隔符号。此分隔符号可以是一个或多个字符。',
  log_user: '用户',
  log_driver: '驱动',
  log_parameter: '参数',
  log_org: '组织',
  log_role: '角色',
  log_team: '团队',
  log_securityLevel: '安全等级',
  log_application: '应用',
  log_group: '分组',
  'log_dataset/message': '数据集/信息',
  'log_dataset/updateType': '数据集/更新策略',
  'log_dataset/alarm': '数据集/告警',
  log_udf: '扩充函数',
  log_source: '数据源',
  log_job: '作业',
  log_insert: 'Insert',
  log_edit: 'Edit',
  log_delete: 'Delete',
  operation_time: '操作时间',
  operation_type: '操作类型',
  target: '目标',
  target_name: '目标名称',
  operational_logs: '操作记录',
  logs: '记录',
  format_sql: '格式化 SQL',
  dis_full_update_tips: '数据集将根据全量更新设置里的设置进行更新。',
  server_selection_timeout: '服务器选择超时时间 (ms)',
  server_selection_timeout_tips: '客户端尝试与 MongoDB 服务器建立连接时，如果在指定时间内无法选择到可用的服务器，则会触发超时错误。',
  operator: '操作者',
  fixed_survival_time: '固定存活时间',
  api_url: 'API 地址',
  tenant_id: '租户 ID',
  search_executor: '搜索执行者',
  interface: '界面',
  source: '来源',
  table_name: '表名称',
  export_table: '导出数据表',
  export_schema: '导出模式',
  import_schema: '导入模式',
  data_counts: '数据笔数',
  data_timezone: '数据时区',
  json: 'JSON',
  incremental_setting_start_time_tips: '开始时间不包含时区。如果该栏位在来源数据库中有时区设置，请将值转换为 UTC+0 时区的时间。',
  policy_everyday_tips: '第一次刷新缓存的时间，之后每天的相同时间会刷新缓存。',
  fail_upload_fail_datatype: '无法上传文件，文件中包含了不支持的栏位类型。',
  last_completed_time: '最后成功执行时间',
  api_token: 'API token',
  bucket: 'Bucket',
  influx_v2_org_tips: '组织是一组用户的工作空间。',
  influx_v2_bucket_tips: 'Bucket 是储存具有保留策略的数据的命名位置。',
  agent_builder: 'AI 数智助理',
  ai_chat_bot: '与数据对话',
  stop_sec: '停止（{time} 秒）',
  ai_assistant: 'AI 助手',
  ai_explain: '解释',
  ai_rewrite: '重写',
  ai_rewrite_ask: '提问并重写',
  ai_result: 'AI 结果',
  ai_assistant_placeholder: '请输入问题',
  try_again: '再试一次',
  discard: '忽略',
  accept: '接受',
  ai_mirror_placeholder: '请输入 SQL，也可以按空格键打开 AI 助手',
  copilot_enabled_tips: '启用 Copilot',
  alarm_event: '告警事件',
  no_events: '暂无事件',
  no_events_tips: '点击 ’规则设置‘ 按钮来新增规则！',
  rule_setting: '规则设置',
  event_id: '事件 ID',
  last_update_time: '最后更新时间',
  first_triggered_time: '第一次触发时间',
  released_time: '释放时间',
  trigger_data: '触发数据',
  no_trigger_data_tips: '请选择上边表格中的一行。',
  gender: 'Gender',
  order: '序列',
  department: '部门',
  time: '时间',
  rule_information: '规则详情',
  trigger_rule: '触发规则',
  trigger_rule_lower: '触发规则',
  trigger_rule_list: '触发规则列表',
  add_rule_tips: '点击 ’+‘ 添加规则！',
  trigger_rule_name: '触发规则名称',
  trigger_notification: '触发通知',
  trigger_notification_group: '通知群组（触发）',
  release_notification: '释放通知',
  release_notification_group: '通知群组（释放）',
  add_trigger_rule: '添加触发规则',
  trigger_rule_information: '触发规则详情',
  input_mode: '设置模式',
  input_mode_tips: '使用高级设置后，如果您希望使用基础模式，则已设置的规则将被清除。',
  sql_editor: 'SQL 编辑器',
  notification_setting: '通知设置',
  check_frequency: '检查频率',
  check_type: '检查类型',
  same_as_update_strategy: '与更新策略一致',
  customized: '自定义',
  basic_: '基础',
  value: '值',
  preview_execution_sql: '预览执行 SQL',
  execution_sql: '执行 SQL',
  last_updated_time: '最后一次更新时间',
  event_logs: '事件日志',
  triggered: '已触发',
  released: '已释放',
  current_event: '当前事件',
  history_event: '历史事件',
  switch_input_mode: '切换输入模式',
  sure_switch_basic: '切换到基础模式会清空所有输入的内容。确定要切换吗？',
  sure_switch_sql: '切换到 SQL 编辑模式会清空所有输入的内容。确定要切换吗？',
  partition_setting: '分区设置',
  portal_url_tips: 'DataInsight portal 的公开 URL。',
  alarm_log_records: '告警历史记录',
  alarmlog_retention_policy_days: '告警历史记录的保留天数。',
  alarmlog_vacuum_start_time: '每天删除告警历史记录的开始时间。',
  event_center_enabled_tips: '与 Event Center 整合来发出告警通知。',
  quota_management: '指标管理',
  quota_overview: '指标预览',
  quota_settings: '指标设置',
  resource_group: '资源组',
  log_resourcegroup: '资源组',
  resource_group_lower: '资源组',
  resource_info: '资源信息',
  resource_group_list: '资源组列表',
  resource_group_name: '资源组名称',
  sure_to_delete_resource_group: '确定要删除此资源组吗？所有设置都会被删除。',
  sure_to_delete_resource_groups: '确定要删除已选择的资源组吗？所有设置都会被删除。',
  num_resource_group: '{num} 个资源组',
  add_resource_group: '添加资源组',
  resource_monitor: '资源监控',
  driver_memory_unit: '驱动器内存（GiB）',
  driver_memory: '驱动器内存',
  resource_list: '资源列表',
  sec_lower: '秒',
  gib: 'GiB',
  cores: 'Cores',
  space_gib: ' GiB',
  space_cores: ' cores',
  cores_lower: 'cores',
  'cpu:': 'CPU：',
  'memory:': '内存：',
  'cpu': 'CPU',
  'memory': '内存',
  resource_total: '资源总量',
  driver_resource_total: '驱动器资源总量',
  executor_resource_total: '执行器资源总量',
  resource_chart: '资源趋势',
  executor_counts: '执行器个数',
  executor_cpu_unit: '执行器 CPU（Cores）',
  executor_memory_unit: '执行器内存（GiB）',
  executor_cpu: '执行器 CPU',
  executor_memory: '执行器内存',
  binding_org: '绑定组织',
  resource_driver: '驱动器',
  resource_executor: '执行器',
  metric_management: '指标管理',
  metric_develop: '指标开发',
  metric_catalog: '指标目录',
  metric_name: '指标名称',
  metric_code: '指标标识',
  metric_definition: '业务口径',
  no_metric_list: '暂无指标。',
  select_add_group_first: '从左侧菜单中添加或选择分组。',
  atomic_metric: '原子指标',
  derived_metric: '派生指标',
  composite_metric: '复合指标',
  add_atomic_metric: '新增原子指标',
  add_derived_metric: '新增派生指标',
  add_composite_metric: '新增复合指标',
  save_destination: '保存位置',
  business_properties: '业务属性',
  computational_attributes: '计算属性',
  metric_column: '指标栏位',
  aggregation_method: '聚合方式',
  dimension_management: '维度管理',
  data_scope: '数据范围',
  full_data: '全量数据',
  incremental_data: '增量数据',
  unsupported_data_scope_full: '不能使用全量数据检查，请修改！',
  unsupported_data_scope_incremental: '不能使用增量数据检查，请修改！',
  request_table_size: '请求数据分片大小',
  request_table_size_tips: '此值设置的越小，产生的分区就会越多。这样会增加 Spark 端的并行度，但同时会对 Doris 造成更大的压力。',
  batch_size: '批量大小',
  batch_size_tips: '每次从 BE 读取数据的最大行数。增加此值可以减少 Spark 和 Doris 之间的连接次数。从而减少网络延迟造成的额外时间开销。',
  query_memory_limit: '查询内存上限 (MB)',
  query_memory_limit_tips: '单一查询的内存限制。（以字节为单位）',
  query_timeout: '查询超时时间 (s)',
  dataset_no_enabled_job: '此数据集没有启用中的作业',
  function_group_name_string_and_binary_functions: "字符串和二进制函数",
  function_group_name_numeric_scalar_functions: "数字标量函数",
  function_group_name_aggregate_functions: "聚合函数",
  function_group_name_ranking_window_functions: "排名开窗函数",
  function_group_name_analytic_window_functions: "分析窗口函数",
  function_group_name_array_functions: "数组函数",
  function_group_name_map_functions: "映射函数",
  function_group_name_date_timestamp_and_interval_functions: "日期、时间戳和时间间隔函数",
  function_group_name_cast_functions_and_constructors: "Cast 函数和构造函数",
  function_group_name_csv_functions: "CSV函数",
  function_group_name_json_functions: "JSON函数",
  function_group_name_xpath_functions: "XPath函数",
  function_group_name_miscellaneous_functions: "其他函数",
  function_des_aes_decrypt: "解密使用 AES 加密生成的二进制文件。",
  function_des_aes_encrypt: "使用 AES 加密对二进制文件进行加密。",
  function_des_ascii: "返回 str 的第一个字符的 ASCII 码位。",
  function_des_base64: "将 expr 转换为 base 64 字符串。",
  function_des_bin: "返回 expr 的二进制表示形式。",
  function_des_binary: "将 expr 值强制转换为 BINARY。",
  function_des_bit_length: "返回字符串数据的位长度或二进制数据的位数。",
  function_des_btrim: "返回删除了前导字符和尾随字符的 str。",
  function_des_char: "返回具有与expr等效的二进制值的ASCII字符。如果n大于256，则结果等于chr(n%256)。",
  function_des_char_length: "返回字符串数据的字符长度或二进制数据的字节数。",
  function_des_character_length: "返回字符串数据的字符长度或二进制数据的字节数。",
  function_des_chr: "返回具有与expr等效的二进制值的ASCII字符。如果n大于256，则结果等于chr(n%256)。",
  function_des_concat: "返回参数的串联。",
  function_des_concat_ws: "返回由 sep 分隔的串联字符串。",
  function_des_contains: "如果 left STRING 或 BINARY 包含 right，则返回 true。",
  function_des_crc32: "返回 expr 的循环冗余校验值。",
  function_des_decode: "使用字符集编码 charset 将二进制 expr 转换为字符串。",
  function_des_encode: "使用 charset 字符编码返回字符串的二进制表示形式。",
  function_des_endswith: "如果 expr 以 endExpr 结尾，则返回 true。",
  function_des_find_in_set: "返回某个字符串在逗号分隔的字符串列表中的位置。",
  function_des_format_number: "设置 expr 的格式（如 #,###,###.##），四舍五入到 scale 小数位数。",
  function_des_format_string: "从 printf 样式的格式字符串返回一个带格式的字符串。",
  function_des_hex: "将 expr 转换为十六进制。",
  function_des_initcap: "返回 expr，其中每个单词的首字母大写。",
  function_des_instr: "返回 str 中 substr 的第一个匹配项的索引（从 1 开始）。",
  function_des_lcase: "返回将 expr 的所有字符均更改为小写后的结果。",
  function_des_left: "返回 str 中最左边的 len 个字符。",
  function_des_len: "返回字符串数据的字符长度或二进制数据的字节数。",
  function_des_length: "返回字符串数据的字符长度或二进制数据的字节数。",
  function_des_levenshtein: "返回字符串 str1 和 str2 之间的 Levenshtein 距离。",
  function_des_locate: "返回 substr 第一次出现在 str 中位置 pos 之后的位置。",
  function_des_lower: "返回将 expr 的所有字符均更改为小写后的结果。",
  function_des_lpad: "返回 expr，左侧填充了 pad，填充后长度为 len。",
  function_des_ltrim: "返回 str，其中删除了 trimstr 内的前导字符。",
  function_des_mask: "返回输入 input的掩码版本。",
  function_des_md5: "以十六进制字符串形式返回 expr 的 MD5 128 位校验和。",
  function_des_octet_length: "返回字符串数据的字节长度或二进制数据的字节数。",
  function_des_overlay: "将 input 替换为从 pos 开始且长度为 len 的 replace。",
  function_des_parse_url: "从 url 中提取一个部分。",
  function_des_position: "返回 substr 第一次出现在 str 中位置 pos 之后的位置。",
  function_des_printf: "从 printf 样式的格式字符串返回一个带格式的字符串。",
  function_des_regexp_count: "返回 str 与 regexp 模式匹配的次数。",
  function_des_regexp_extract: "从 str 中提取与 regexp 表达式匹配且对应于 regex 组索引的第一个字符串。",
  function_des_regexp_extract_all: "从 str 中提取与 regexp 表达式匹配且对应于 regex 组索引的所有字符串。",
  function_des_regexp_instr: "返回 str 中与 regexp 匹配的第一个 substring 的位置。",
  function_des_regexp_replace: "将 str 中与 regexp 匹配的所有子字符串替换为 rep。",
  function_des_regexp_substr: "返回 str 中与 regexp 匹配的第一个 substring。",
  function_des_repeat: "返回重复 expr n 次的字符串。",
  function_des_replace: "将所有 search 项都替换为 replace。",
  function_des_reverse: "返回一个反向字符串或一个包含逆序的元素的数组。",
  function_des_right: "返回字符串 str 中最右边的 len 个字符。",
  function_des_rpad: "返回右侧填充了 pad 的 expr，填充后整个字符的长度为 len。",
  function_des_rtrim: "返回删除了尾随字符的 str。",
  function_des_sentences: "将 str 拆分为一个数组，其中包含单词数组。",
  function_des_sha: "以 expr 的十六进制字符串形式返回 sha1 哈希值。",
  function_des_sha1: "以 expr 的十六进制字符串形式返回 sha1 哈希值。",
  function_des_sha2: "以 expr 的十六进制字符串形式返回 SHA-2 系列的校验和。",
  function_des_soundex: "返回字符串的 soundex 编码。",
  function_des_space: "返回由 n 个空格组成的字符串。",
  function_des_split: "根据匹配 regex 的匹配项拆分 str，并以最大的长度 limit 返回数组。",
  function_des_split_part: "将 str 围绕 delimiter 的次数拆分，并返回 partNum 部分。",
  function_des_startswith: "如果 expr STRING 或 BINARY 以 startExpr 开头，则返回 true。",
  function_des_string: "将 expr 值强制转换为 STRING。",
  function_des_substr: "返回 expr 的子字符串（从 pos 开始，并且长度为 len）。",
  function_des_substring: "返回 expr 的子字符串（从 pos 开始，并且长度为 len）。",
  function_des_substring_index: "返回分隔符 delim 出现 count 次之前 expr 的子字符串。",
  function_des_to_binary: "返回基于 fmt 强制转换为 BINARY 的 expr。",
  function_des_to_char: "使用 formatExpr 格式将 numberExpr 强制转换为 STRING。",
  function_des_to_number: "使用格式化 fmt 将 expr 强制转换为十进制。",
  function_des_translate: "返回一个 expr，其中 from 内的所有字符都被替换为 to 中的字符。",
  function_des_trim: "剪裁字符串中的字符。",
  function_des_try_to_binary: "返回基于 fmt 强制转换为 BINARY 的 expr；如果输入无效，则返回 NULL。",
  function_des_ucase: "返回将 expr 的所有字符均更改为大写后的结果。",
  function_des_unbase64: "以二进制形式返回已解码的 base64 字符串。",
  function_des_unhex: "将十六进制 expr 转换为二进制。",
  function_des_upper: "返回将 expr 的所有字符均更改为大写后的结果。",
  function_des_url_decode: "将字符串从 application/x-www-form-urlencoded 格式转换回来。",
  function_des_url_encode: "将字符串转换为 application/x-www-form-urlencoded 格式。",
  function_des_abs: "返回 expr 中数值的绝对值。",
  function_des_acos: "返回 expr 的反余弦值 (arccosine)。",
  function_des_acosh: "返回 expr 的反双曲余弦值。",
  function_des_asin: "返回 expr 的反正弦值 (arcsine)。",
  function_des_asinh: "返回 expr 的反双曲正弦值。",
  function_des_atan: "返回 expr 的反正切值 (arctangent)。",
  function_des_atan2: "返回平面的正 x 轴与坐标 (exprX, exprY) 指定的点之间的角度（以弧度为单位）。",
  function_des_atanh: "返回 expr 的反双曲正切值。",
  function_des_bigint: "将 expr 值强制转换为 BIGINT。",
  function_des_bit_count: "返回参数中设置的位数。",
  function_des_bit_get: "返回某个整数的二进制表示形式中某一位的值。",
  function_des_bround: "使用 HALF_EVEN 舍入模式返回舍入运算后的 expr。",
  function_des_cbrt: "返回 expr 的立方根。",
  function_des_ceil: "返回不小于 expr 的最小数。",
  function_des_ceiling: "返回不小于 expr 的最小数。",
  function_des_conv: "将 num 从 fromBase 转换为 toBase。",
  function_des_convert_timezone: "将 TIMESTAMP_NTZ sourceTs 从 sourceTz 时区转换为 targetTz 时区。",
  function_des_cos: "返回 expr 的余弦值。",
  function_des_cosh: "返回 expr 的双曲余弦。",
  function_des_cot: "返回 expr 的余切值。",
  function_des_csc: "返回 expr 的余割。",
  function_des_degrees: "将弧度转换为度。",
  function_des_double: "将 expr 值强制转换为 Double 值。",
  function_des_e: "返回常数 e。",
  function_des_exp: "返回 e 的 expr 次方。",
  function_des_expm1: "返回 exp(expr) - 1。",
  function_des_factorial: "返回 expr 的阶乘。",
  function_des_float: "将 expr 值强制转换为浮点数。",
  function_des_floor: "返回不大于 expr 的最大数。",
  function_des_getbit: "返回某个整数的二进制表示形式中某一位的值。",
  function_des_hypot: "返回 sqrt(expr1 * expr1 + expr2 * expr2)。",
  function_des_int: "将 expr 值强制转换为 INTEGER。",
  function_des_isnan: "如果 expr 为 NaN，则返回 true。",
  function_des_ln: "返回 expr 的自然对数（以 e 为底）。",
  function_des_log: "返回 expr 的对数（以 base 为底）。",
  function_des_log10: "返回 expr 的对数（以 10 为底）。",
  function_des_log1p: "返回 log(1 + expr)。",
  function_des_log2: "返回 expr 的对数（以 2 为底）。",
  function_des_mod: "返回在进行 dividend / divisor 运算后的余数。",
  function_des_nanvl: "如果不是 NaN，则返回 expr1，否则返回 expr2。",
  function_des_negative: "返回 expr 的求反值。",
  function_des_pi: "返回 pi。",
  function_des_pmod: "返回在进行 dividend / divisor 运算后的正余数。",
  function_des_positive: "返回 expr 的值。",
  function_des_pow: "将 expr1 提升为 expr2 的幂。",
  function_des_power: "将 expr1 提升为 expr2 的幂。",
  function_des_radians: "将 expr（以度为单位）转换为弧度。",
  function_des_rand: "返回介于 0 和 1 之间的随机值。",
  function_des_randn: "从标准正态分布返回一个随机值。",
  function_des_random: "返回介于 0 和 1 之间的随机值。",
  function_des_rint: "返回作为 DOUBLE 舍入为整数的 expr。",
  function_des_round: "使用 HALF_UP 舍入模式返回舍入运算后的 expr。",
  function_des_shiftleft: "返回按位左移 n 位后的结果。",
  function_des_shiftright: "返回按位右移 n 位的带符号整数。",
  function_des_shiftrightunsigned: "返回按位右移 n 位的无符号整数。",
  function_des_sign: "当 expr 为负数、0 或正数时返回 -1.0、0.0 或 1.0。",
  function_des_signum: "当 expr 为负数、0 或正数时返回 -1.0、0.0 或 1.0。",
  function_des_sec: "返回 expr 的正割值，计算如同 1/java.lang.Math.cos。",
  function_des_sin: "返回 expr 的正弦值。",
  function_des_sinh: "返回 expr 的双曲正弦。",
  function_des_sqrt: "返回 expr 的平方根。",
  function_des_tan: "返回 expr 的正切。",
  function_des_tanh: "返回 expr 的双曲正切。",
  function_des_try_add: "返回 expr1 加 expr2 的和，或者，如果发生错误，则返回 NULL。",
  function_des_try_divide: "返回 dividend 除以 divisor，或者，如果 divisor 为 0，则返回 NULL。",
  function_des_try_multiply: "返回 expr1乘以 expr2的结果，在溢出时返回NULL。",
  function_des_try_subtract: "返回从 expr1 减去 expr2 得到的结果，溢出时返回NULL。",
  function_des_try_to_number: "使用格式化 fmt 将 expr 强制转换为十进制，如果 expr 与格式不匹配，则返回 NULL。",
  function_des_width_bucket: "返回等宽直方图中某个值的 Bucket 编号。",
  function_des_any: "如果组中至少一个 expr 值为 true，则返回 true。",
  function_des_any_value: "返回一组行的任意随机 expr 值。",
  function_des_approx_count_distinct: "返回组内 expr 中的预估非重复值数。",
  function_des_approx_percentile: "返回组内 expr 的百分位近似值。",
  function_des_array_agg: "返回一组行的任意随机 expr 值。",
  function_des_avg: "返回从组的值计算出的平均值。",
  function_des_bit_and: "返回组中所有输入值的按位 AND 结果。",
  function_des_bit_or: "返回组中所有输入值的按位 OR 结果。",
  function_des_bit_xor: "返回组中所有输入值的按位 XOR 结果。",
  function_des_bool_and: "如果 expr 中的所有值在组内都为 true，则返回 true。",
  function_des_bool_or: "如果 expr 中的至少一个值在组内为 true，则返回 true。",
  function_des_collect_list: "返回一个数组，该数组由组内 expr 中的所有值组成。",
  function_des_collect_set: "返回一个数组，该数组由组内 expr 中的所有唯一值组成。",
  function_des_corr: "返回表示一组数字对之间的关联情况的皮尔逊系数。",
  function_des_count: "返回在组中检索到的行的总数，包括那些包含 null 的行。",
  function_des_count_if: "返回 expr 中 TRUE 值的数量。",
  function_des_count_min_sketch: "返回具有 epsilon、confidence 和 seed 的 expr 中的组中所有值的 count-min sketch。",
  function_des_covar_pop: "返回组中数字对的总体协方差。",
  function_des_covar_samp: "返回组中数字对的样本协方差。",
  function_des_every: "	如果组中 expr 的所有值均为 true，则返回 true。",
  function_des_first: "返回一组行的第一个 expr 值。",
  function_des_first_value: "返回一组行的第一个 expr 值。",
  function_des_kurtosis: "返回从组的值计算出的峰度值。",
  function_des_last: "返回一组行的最后一个 expr 值。",
  function_des_last_value: "返回一组行的最后一个 expr 值。",
  function_des_max: "返回组中 expr 的最大值。",
  function_des_max_by: "返回与组中 expr2 的最大值关联的 expr1 的值。",
  function_des_mean: "返回从组的值计算出的平均值。",
  function_des_median: "返回根据组的值计算出的中值。",
  function_des_min: "返回组中 expr 的最小值。",
  function_des_min_by: "返回与组中 expr2 的最小值关联的 expr1 的值。",
  function_des_mode: "返回组中 expr 的最常见值。",
  function_des_percentile: "返回位于指定 percentage 处的 expr 的确切百分位值。",
  function_des_percentile_approx: "返回组内 expr 的百分位近似值。",
  function_des_regr_avgx: "返回从 x和 y不为 NULL 的组的值计算出的 x的平均值。",
  function_des_regr_avgy: "返回从 x 和 y 不为 NULL 的组的值计算出的 y 的平均值。",
  function_des_regr_count: "返回组中非 null 值对 y, x 的数目。",
  function_des_regr_intercept: "返回组中单变量线性回归线的截距。",
  function_des_regr_r2: "返回组中非空对的确定系数，其中 y 是因变量，x 是自变量。",
  function_des_regr_slope: "返回组中非 null 值对 y、x 的线性回归线的斜率。",
  function_des_regr_sxx: "返回 x 和 y 不为 NULL 的组中 x 值的平方和。",
  function_des_regr_sxy: "返回根据 x 和 y 不为 NULL 的组的值计算出的 y 和 x 乘积的和。",
  function_des_regr_syy: "返回 x 和 y 不为 NULL 的组中 y 值的平方和。",
  function_des_skewness: "返回从组的值计算出的偏度值。",
  function_des_some: "如果组中至少有一个 expr 值是 true，则返回 true。",
  function_des_std: "返回通过组中的值计算出的样本标准偏差。",
  function_des_stddev: "返回通过组中的值计算出的样本标准偏差。",
  function_des_stddev_pop: "返回从组的值计算出的总体标准偏差。",
  function_des_stddev_samp: "返回从组的值计算出的样本标准偏差。",
  function_des_sum: "返回从组的值计算出的总和值。",
  function_des_try_avg: "返回从组的值计算的平均值，如果溢出则返回 NULL。",
  function_des_try_sum: "返回从组的值计算的总和，如果溢出则返回 NULL。",
  function_des_var_pop: "返回从组的值计算出的总体方差。",
  function_des_var_samp: "返回从组的值计算出的样本方差。",
  function_des_variance: "返回从组的值计算出的样本方差。",
  function_des_dense_rank: "返回某个值相对于分区中所有值的排名。",
  function_des_ntile: "将每个窗口分区的行分割为从 1 到至多 n 的 n 个 Bucket。",
  function_des_percent_rank: "计算分区中某个值的百分比排名。",
  function_des_rank: "返回某个值相对于分区中所有值的排名。",
  function_des_row_number: "根据窗口分区中的行顺序，为每一行分配唯一的顺序编号（从 1 开始）。",
  function_des_cume_dist: "返回某个值相对于分区中所有值的位置。",
  function_des_lag: "从分区中的前一行返回 expr 的值。",
  function_des_lead: "从分区中的后续行返回值 expr。",
  function_des_nth_value: "返回位于窗口中特定 offset 处的 expr 的值。",
  function_des_aggregate: "使用自定义聚合器聚合数组中的元素。",
  function_des_array: "返回一个数组，其中包含 expr 中的元素。",
  function_des_array_append: "返回 elem 追加的 array。",
  function_des_array_compact: "从 array 中删除 NULL 值。",
  function_des_array_contains: "如果 array 包含 value，则返回 true。",
  function_des_array_distinct: "从 array 中删除重复值。",
  function_des_array_except: "返回 array1 中（而不是 array2 中）的元素的数组。",
  function_des_array_insert: "返回一个展开的 array，其中的 elem 插入到 index 位置。",
  function_des_array_intersect: "返回 array1 和 array2 的交集中的元素的数组。",
  function_des_array_join: "串联 array 的元素。",
  function_des_array_max: "返回 array 中的最大值。",
  function_des_array_min: "返回 array 中的最小值。",
  function_des_array_position: "返回 array 中第一次出现 element 的位置。",
  function_des_array_remove: "从 array 中删除所有出现的 element。",
  function_des_array_repeat: "返回包含 elementcount 次数的数组。",
  function_des_array_size: "返回 array 中的元素数量。",
  function_des_array_sort: "返回根据 func 排序的 array。",
  function_des_array_union: "返回 array1 和 array2 的并集中的元素的数组，不包含重复项。",
  function_des_arrays_overlap: "如果 array1 和 array2 的交集不为空，则返回 true。",
  function_des_arrays_zip: "返回合并的结构数组，其中第 n 个结构包含输入数组的所有第 N 个值。",
  function_des_cardinality: "返回 expr 的大小。",
  function_des_element_at: "返回位于 index 处的 arrayExpr 的元素。",
  function_des_exists: "如果 pred 对于 expr 中的任一元素为 true，则返回 true。",
  function_des_explode: "通过取消嵌套 expr 返回行。",
  function_des_explode_outer: "使用 outer 语义通过取消嵌套 expr 返回行。",
  function_des_filter: "使用函数 func 筛选 expr 中的数组。",
  function_des_flatten: "将数组的数组转换为单个数组。",
  function_des_forall: "测试 func 是否对数组中的所有元素都有效。",
  function_des_get: "返回 index 处的 arrayExpr 元素，从 0 开始。",
  function_des_inline: "将结构数组分解为一个表。",
  function_des_inline_outer: "将结构数组分解为一个具有 OUTER 语义的表。",
  function_des_posexplode: "通过取消嵌套具有位置编号的数组来返回行。",
  function_des_posexplode_outer: "使用 OUTER 语义，通过取消嵌套具有位置编号的数组来返回行。",
  function_des_reduce: "使用自定义聚合器聚合数组中的元素。",
  function_des_sequence: "生成一个数组，其中包含从 start 到 stop（含）的元素，这些元素按 step 递增。",
  function_des_shuffle: "返回 expr 中数组的随机排列。",
  function_des_size: "返回 expr 的基数。",
  function_des_slice: "返回数组的子集。",
  function_des_sort_array: "按排序顺序返回 expr 中的数组。",
  function_des_transform: "使用函数 expr 转换 func 中数组中的元素。",
  function_des_try_element_at: "返回位于 index 处的 array 的元素；如果 index 超出边界，则返回 NULL。",
  function_des_zip_with: "使用 func 按元素将 expr1 和 expr2 中的数组合并到一个数组中。",
  function_des_map: "创建具有指定键值对的映射。",
  function_des_map_concat: "返回所有 expr 映射表达式的并集。",
  function_des_map_contains_key: "如果 map 包含 key，则返回 true；否则返回 false。",
  function_des_map_entries: "返回 map 中所有条目的无序数组。",
  function_des_map_filter: "使用 func 函数在 expr 中筛选映射中的条目。",
  function_des_map_from_arrays: "创建具有 keys 和 values 对数组的映射。",
  function_des_map_from_entries: "创建从指定的条目数组创建的映射。",
  function_des_map_keys: "返回包含 map 键的无序数组。",
  function_des_map_values: "返回一个包含 map 值的无序数。",
  function_des_map_zip_with: "将 map1 和 map2 合并到一个映射中。",
  function_des_str_to_map: "在使用分隔符将输入拆分为键值对之后创建映射。",
  function_des_transform_keys: "使用 func 函数在 expr 中转换映射中的键。",
  function_des_transform_values: "使用 func 函数在 expr 中转换映射中的值。",
  function_des_add_months: "返回在 startDate 之后 numMonths 的日期。",
  function_des_curdate: "返回查询计算开始时的当前日期。",
  function_des_current_date: "返回查询计算开始时的当前日期。",
  function_des_current_timestamp: "返回查询计算开始时的当前时间戳。",
  function_des_current_timezone: "返回当前会话的本地时区。",
  function_des_date: "将 expr 值强制转换为日期。",
  function_des_date_add: "返回在 startDate 之后的日期 numDays。",
  function_des_dateadd: "新增时间值 value 至 expr，时间的单位为 unit。",
  function_des_date_diff: "返回从 startDate 到 endDate的天数。",
  function_des_date_from_unix_date: "根据自 1970-01-01 以来的天数创建日期。",
  function_des_date_format: "将时间戳转换为 fmt 格式的字符串。",
  function_des_date_part: "提取部分日期、时间戳或间隔。",
  function_des_date_sub: "返回在 startDate 之前的日期 numDays。",
  function_des_date_trunc: "返回已截断到 field 中指定的单位的时间戳。",
  function_des_datediff: "返回从 startDate 到 endDate 的天数。",
  function_des_day: "返回日期或时间戳的月份日期。",
  function_des_dayofmonth: "返回日期或时间戳的月份日期。",
  function_des_dayofweek: "返回日期或时间戳是星期几。",
  function_des_dayofyear: "从日期或时间戳返回一年中的第几天。",
  function_des_extract: "返回 source 的 field。",
  function_des_from_unixtime: "返回 fmt 中的 unixTime。",
  function_des_from_utc_timestamp: "返回在时区 timeZone 中以 UTC 指定的 expr 格式的时间戳。",
  function_des_hour: "返回时间戳的小时部分。",
  function_des_last_day: "返回日期所属月份的最后一天。",
  function_des_make_date: "从 year、month 和 day 字段创建日期。",
  function_des_make_dt_interval: "从 days、hours、mins 和 secs 创建日期时间间隔。",
  function_des_make_interval: "从 years、months、weeks、days、hours、mins 和 secs 创建时间间隔。",
  function_des_make_timestamp: "从 year、month、day、hour、min、sec 和 timezone 字段创建时间戳。",
  function_des_make_ym_interval: "从 years 和 months 创建年月时间间隔。",
  function_des_minute: "返回 expr 中时间戳的分钟部分。",
  function_des_month: "返回 expr 中时间戳的月份部分。",
  function_des_months_between: "返回 expr1 和 expr2 中的日期或时间戳之间已过去的月数。",
  function_des_next_day: "返回晚于 expr 并已按 dayOfWeek 中命名的第一个日期。",
  function_des_now: "返回查询计算开始时的当前时间戳。",
  function_des_quarter: "返回 expr 的年度的第几季（范围为 1 到 4）。",
  function_des_second: "返回 expr 中时间戳的秒部分。",
  function_des_timestamp: "将 expr 强制转换为 TIMESTAMP。",
  function_des_timestamp_micros: "创建自 UTC 纪元以来的时间戳（expr 微秒）。",
  function_des_timestamp_millis: "创建自 UTC 纪元以来的时间戳 expr 毫秒。",
  function_des_timestamp_seconds: "创建一个时间戳，表示自 UTC 纪元以来已过去 expr 秒。",
  function_des_to_date: "返回使用可选格式设置将 expr 转换为日期后的值。",
  function_des_to_timestamp: "使用可选格式将 expr 强制转换返回到某个时间戳。",
  function_des_to_unix_timestamp: "将 expr 中的时间戳返回为 UNIX 时间戳。",
  function_des_to_utc_timestamp: "以与 UTC 不同的时区返回 expr 中的时间戳。",
  function_des_trunc: "返回一个日期，其时间部分已截断到格式模型 fmt 所指定的单位。",
  function_des_try_to_timestamp: "使用可选格式转换为时间戳，返回 timestamp_str，如果转换失败，则返回 NULL。",
  function_des_unix_date: "返回自 1970-01-01 以来经过的天数。",
  function_des_unix_micros: "返回自 1970-01-01 00:00:00 UTC 以来的微秒数。",
  function_des_unix_millis: "返回自 1970-01-01 00:00:00 UTC 以来经过的毫秒数。",
  function_des_unix_seconds: "返回自 1970-01-01 00:00:00 UTC 以来经过的秒数。",
  function_des_unix_timestamp: "返回当前时间或指定时间的 UNIX 时间戳。",
  function_des_weekday: "返回 expr 的星期日期。",
  function_des_weekofyear: "返回 expr 的年度中的第几周。",
  function_des_year: "返回 expr 的年份部分。",
  function_des_window: "通过 timestamp 表达式创建基于跳跃的滑动窗口。",
  function_des_window_time: "返回由 window 或 session_window 函数生成的滑动窗口的非独占结束时间。",
  function_des_boolean: "将 expr 强制转换为布尔值。",
  function_des_cast: "将值 expr 强制转换为目标数据类型 type。",
  function_des_decimal: "将 expr 值强制转换为 DECIMAL。",
  function_des_named_struct: "创建具有指定的字段名称和值的结构。",
  function_des_smallint: "将 expr 值强制转换为 SMALLINT。",
  function_des_struct: "创建具有指定字段值的结构。",
  function_des_tinyint: "将 expr 强制转换为 TINYINT。",
  function_des_from_csv: "返回具有 csvStr 和 schema 的结构值。",
  function_des_schema_of_csv: "返回 DDL 格式的 CSV 字符串的架构。",
  function_des_to_csv: "返回具有指定结构值的 CSV 字符串。",
  function_des_from_json: "返回具有 jsonStr 和 schema 的结构值。",
  function_des_get_json_object: "从 path 提取 JSON 对象。",
  function_des_json_array_length: "返回最外层 JSON 数组中的元素数。",
  function_des_json_object_keys: "以数组形式返回最外层 JSON 对象的所有键。",
  function_des_json_tuple: "以元组形式返回多个 JSON 对象。",
  function_des_schema_of_json: "返回 DDL 格式的 JSON 字符串的架构。",
  function_des_to_json: "返回一个 JSON 字符串，其中 expr 中指定了结构。",
  function_des_xpath: "返回与 xpath 匹配的 xml 节点内的值。",
  function_des_xpath_boolean: "如果 xpath 表达式的计算结果为 true，或者在 xml 中找到匹配节点，则返回 true。",
  function_des_xpath_double: "从 XML 文档返回 DOUBLE 值。",
  function_des_xpath_float: "从 XML 文档返回 FLOAT 值。",
  function_des_xpath_int: "从 XML 文档返回 INTEGER 值。",
  function_des_xpath_long: "从 XML 文档返回 BIGINT 值。",
  function_des_xpath_number: "从 XML 文档返回 DOUBLE 值。",
  function_des_xpath_short: "从 XML 文档返回 SHORT 值。",
  function_des_xpath_string: "返回与 XPath 表达式匹配的第一个 XML 节点的内容。",
  function_des_assert_true: "如果 expr 不为 true，则返回错误。",
  function_des_case: "返回第一个非 NULL 参数。",
  function_des_coalesce: "返回第一个非 NULL 参数。",
  function_des_cube: "使用指定的表达式列创建多维数据集。",
  function_des_current_catalog: "返回当前目录。",
  function_des_current_database: "返回当前架构。",
  function_des_current_schema: "返回当前目录。",
  function_des_current_user: "返回当前用户。",
  function_des_elt: "返回第 n 个表达式。",
  function_des_equal_null: "如果 expr1 等于 expr2 或两个表达式都为 NULL，则返回 true，否则返回 false。",
  function_des_greatest: "返回所有参数的最大值（跳过 NULL 值）。",
  function_des_grouping: "指示在 GROUP BY 中指定的列是否已聚合，如果已聚合则返回1，未聚合则返回0。",
  function_des_grouping_id: "返回一组列的分组级别。",
  function_des_hash: "返回参数的哈希值。",
  function_des_if: "如果 cond 为 true，则返回 expr1；否则返回 expr2。",
  function_des_ifnull: "如果 expr1 为 NULL，则返回 expr2；否则返回 expr1。",
  function_des_input_file_block_length: "返回所读取块的长度（以字节为单位）。",
  function_des_input_file_block_start: "返回正在读取的块的起始偏移量（以字节为单位）。",
  function_des_input_file_name: "返回正在读取的文件的名称。如果无法获得该名称，则返回空字符串。",
  function_des_isnotnull: "如果 expr 不为 NULL，则返回 true。",
  function_des_isnull: "如果 expr 为 NULL，则返回 true。",
  function_des_java_method: "使用反射调用某个方法。",
  function_des_least: "返回所有参数的最小值（跳过 null 值）。",
  function_des_monotonically_increasing_id: "返回单调递增的 64 位整数。",
  function_des_nullif: "如果 expr1 等于 expr2，则返回 NULL；否则返回 expr1。",
  function_des_nvl: "如果 expr1 为 NULL，则返回 expr2；否则返回 expr1。",
  function_des_nvl2: "如果 expr1 不是 NULL，则返回 expr2，否则返回 expr3。",
  function_des_raise_error: "使用 expr 作为消息引发异常。",
  function_des_reflect: "使用反射调用某个方法。",
  function_des_stack: "将 expr1 … exprN 分隔成 numRows 行。",
  function_des_spark_partition_id: "返回当前分区 ID。",
  function_des_typeof: "为输入的数据类型返回 DDL 格式的类型字符串。",
  function_des_user: "返回当前用户。",
  function_des_uuid: "返回全局唯一标识符 (UUID) 字符串。",
  function_des_version: "返回 Apache Spark 版本。",
  function_des_when: "当 expr1 = true，返回 expr2；或者当 expr3 = true，返回 expr4；或者返回expr5。",
  function_des_xxhash64: "返回参数的 64 位哈希值。备注：使用此函数时，可能会因为结果大于 JavaScript 中数字类型的最大值导致精度丢失，从而使预览结果与实际结果不一致。",
};

export default zh_CN;
